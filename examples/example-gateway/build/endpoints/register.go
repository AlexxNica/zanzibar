// Code generated by zanzibar
// @generated

// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package endpoints

import (
	"github.com/uber/zanzibar/examples/example-gateway/build/endpoints/bar"
	"github.com/uber/zanzibar/examples/example-gateway/build/endpoints/baz"
	"github.com/uber/zanzibar/examples/example-gateway/build/endpoints/contacts"
	"github.com/uber/zanzibar/examples/example-gateway/build/endpoints/googlenow"
	"github.com/uber/zanzibar/examples/example-gateway/middlewares/example"
	"github.com/uber/zanzibar/runtime/middlewares/logger"

	"github.com/uber/zanzibar/runtime"
)

// Endpoints is a struct that holds all the endpoints
type Endpoints struct {
	BarArgNotStructHTTPHandler           *bar.ArgNotStructHandler
	BarMissingArgHTTPHandler             *bar.MissingArgHandler
	BarNoRequestHTTPHandler              *bar.NoRequestHandler
	BarNormalHTTPHandler                 *bar.NormalHandler
	BarTooManyArgsHTTPHandler            *bar.TooManyArgsHandler
	BazCallHTTPHandler                   *baz.CallHandler
	BazCompareHTTPHandler                *baz.CompareHandler
	BazPingHTTPHandler                   *baz.PingHandler
	BazSillyNoopHTTPHandler              *baz.SillyNoopHandler
	ContactsSaveContactsHTTPHandler      *contacts.SaveContactsHandler
	GooglenowAddCredentialsHTTPHandler   *googlenow.AddCredentialsHandler
	GooglenowCheckCredentialsHTTPHandler *googlenow.CheckCredentialsHandler
	BazCallTChannelHandler               zanzibar.TChanHandler
}

// CreateEndpoints bootstraps the endpoints.
func CreateEndpoints(
	gateway *zanzibar.Gateway,
) interface{} {
	return &Endpoints{
		BarArgNotStructHTTPHandler:           bar.NewArgNotStructEndpoint(gateway),
		BarMissingArgHTTPHandler:             bar.NewMissingArgEndpoint(gateway),
		BarNoRequestHTTPHandler:              bar.NewNoRequestEndpoint(gateway),
		BarNormalHTTPHandler:                 bar.NewNormalEndpoint(gateway),
		BarTooManyArgsHTTPHandler:            bar.NewTooManyArgsEndpoint(gateway),
		BazCallHTTPHandler:                   baz.NewCallEndpoint(gateway),
		BazCompareHTTPHandler:                baz.NewCompareEndpoint(gateway),
		BazPingHTTPHandler:                   baz.NewPingEndpoint(gateway),
		BazSillyNoopHTTPHandler:              baz.NewSillyNoopEndpoint(gateway),
		ContactsSaveContactsHTTPHandler:      contacts.NewSaveContactsEndpoint(gateway),
		GooglenowAddCredentialsHTTPHandler:   googlenow.NewAddCredentialsEndpoint(gateway),
		GooglenowCheckCredentialsHTTPHandler: googlenow.NewCheckCredentialsEndpoint(gateway),
		BazCallTChannelHandler:               baz.NewSimpleServiceCallHandler(gateway),
	}
}

// Register will register all endpoints
func Register(g *zanzibar.Gateway) {
	httpRouter := g.HTTPRouter
	tchanRouter := g.TChanRouter
	endpoints := CreateEndpoints(g).(*Endpoints)

	httpRouter.Register(
		"POST", "/bar/arg-not-struct-path",
		zanzibar.NewRouterEndpoint(
			g,
			"bar",
			"argNotStruct",
			endpoints.BarArgNotStructHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"GET", "/bar/missing-arg-path",
		zanzibar.NewRouterEndpoint(
			g,
			"bar",
			"missingArg",
			endpoints.BarMissingArgHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"GET", "/bar/no-request-path",
		zanzibar.NewRouterEndpoint(
			g,
			"bar",
			"noRequest",
			endpoints.BarNoRequestHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/bar/bar-path",
		zanzibar.NewRouterEndpoint(
			g,
			"bar",
			"normal",
			zanzibar.NewStack([]zanzibar.MiddlewareHandle{
				example.NewMiddleWare(
					g,
					example.Options{
						Foo: "test",
					},
				),
				logger.NewMiddleWare(
					g,
					logger.Options{},
				),
			}, endpoints.BarNormalHTTPHandler.HandleRequest).Handle,
		),
	)
	httpRouter.Register(
		"POST", "/bar/too-many-args-path",
		zanzibar.NewRouterEndpoint(
			g,
			"bar",
			"tooManyArgs",
			endpoints.BarTooManyArgsHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/baz/call",
		zanzibar.NewRouterEndpoint(
			g,
			"baz",
			"call",
			endpoints.BazCallHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/baz/compare",
		zanzibar.NewRouterEndpoint(
			g,
			"baz",
			"compare",
			endpoints.BazCompareHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"GET", "/baz/ping",
		zanzibar.NewRouterEndpoint(
			g,
			"baz",
			"ping",
			endpoints.BazPingHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"GET", "/baz/silly-noop",
		zanzibar.NewRouterEndpoint(
			g,
			"baz",
			"sillyNoop",
			endpoints.BazSillyNoopHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/contacts/:userUUID/contacts",
		zanzibar.NewRouterEndpoint(
			g,
			"contacts",
			"saveContacts",
			endpoints.ContactsSaveContactsHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/googlenow/add-credentials",
		zanzibar.NewRouterEndpoint(
			g,
			"googlenow",
			"addCredentials",
			endpoints.GooglenowAddCredentialsHTTPHandler.HandleRequest,
		),
	)
	httpRouter.Register(
		"POST", "/googlenow/check-credentials",
		zanzibar.NewRouterEndpoint(
			g,
			"googlenow",
			"checkCredentials",
			endpoints.GooglenowCheckCredentialsHTTPHandler.HandleRequest,
		),
	)
	tchanRouter.Register("SimpleService", "Call", endpoints.BazCallTChannelHandler)
}
