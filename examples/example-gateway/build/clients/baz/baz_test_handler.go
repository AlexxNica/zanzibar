// Code generated by zanzibar
// @generated

// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Package bazClient is generated code used to make or handle TChannel calls using Thrift.
package bazClient

import (
	"context"
	"errors"

	"github.com/uber/zanzibar/runtime"

	clientsBazBaz "github.com/uber/zanzibar/examples/example-gateway/build/gen-code/clients/baz/baz"
)

// SimpleServiceHandler is the handler struct for TChannel service SimpleService.
type SimpleServiceHandler struct {
	CallFunc      SimpleServiceCallFunc
	CompareFunc   SimpleServiceCompareFunc
	PingFunc      SimpleServicePingFunc
	SillyNoopFunc SimpleServiceSillyNoopFunc
}

// SimpleServiceCallFunc ...
type SimpleServiceCallFunc func(
	context.Context, map[string]string, *clientsBazBaz.SimpleService_Call_Args,
) (map[string]string, error)

// SimpleServiceCompareFunc ...
type SimpleServiceCompareFunc func(
	context.Context, map[string]string, *clientsBazBaz.SimpleService_Compare_Args,
) (*clientsBazBaz.BazResponse, map[string]string, error)

// SimpleServicePingFunc ...
type SimpleServicePingFunc func(
	context.Context, map[string]string,
) (*clientsBazBaz.BazResponse, map[string]string, error)

// SimpleServiceSillyNoopFunc ...
type SimpleServiceSillyNoopFunc func(
	context.Context, map[string]string,
) (map[string]string, error)

// NewServerWithSimpleServiceCall creates a TChanServer with given handler function registered.
func NewServerWithSimpleServiceCall(arg SimpleServiceCallFunc) zanzibar.TChanServer {
	return NewSimpleServiceServer(&SimpleServiceHandler{
		CallFunc: arg,
	})
}

// NewServerWithSimpleServiceCompare creates a TChanServer with given handler function registered.
func NewServerWithSimpleServiceCompare(arg SimpleServiceCompareFunc) zanzibar.TChanServer {
	return NewSimpleServiceServer(&SimpleServiceHandler{
		CompareFunc: arg,
	})
}

// NewServerWithSimpleServicePing creates a TChanServer with given handler function registered.
func NewServerWithSimpleServicePing(arg SimpleServicePingFunc) zanzibar.TChanServer {
	return NewSimpleServiceServer(&SimpleServiceHandler{
		PingFunc: arg,
	})
}

// NewServerWithSimpleServiceSillyNoop creates a TChanServer with given handler function registered.
func NewServerWithSimpleServiceSillyNoop(arg SimpleServiceSillyNoopFunc) zanzibar.TChanServer {
	return NewSimpleServiceServer(&SimpleServiceHandler{
		SillyNoopFunc: arg,
	})
}

// Call ...
func (h *SimpleServiceHandler) Call(
	ctx context.Context, reqHeaders map[string]string, args *clientsBazBaz.SimpleService_Call_Args,
) (map[string]string, error) {
	if h.CallFunc == nil {
		return nil, errors.New("CallFunc is not defined")
	}
	return h.CallFunc(ctx, reqHeaders, args)
}

// Compare ...
func (h *SimpleServiceHandler) Compare(
	ctx context.Context, reqHeaders map[string]string, args *clientsBazBaz.SimpleService_Compare_Args,
) (*clientsBazBaz.BazResponse, map[string]string, error) {
	if h.CompareFunc == nil {
		return nil, nil, errors.New("CompareFunc is not defined")
	}
	return h.CompareFunc(ctx, reqHeaders, args)
}

// Ping ...
func (h *SimpleServiceHandler) Ping(
	ctx context.Context, reqHeaders map[string]string,
) (*clientsBazBaz.BazResponse, map[string]string, error) {
	if h.PingFunc == nil {
		return nil, nil, errors.New("PingFunc is not defined")
	}
	return h.PingFunc(ctx, reqHeaders)
}

// SillyNoop ...
func (h *SimpleServiceHandler) SillyNoop(
	ctx context.Context, reqHeaders map[string]string,
) (map[string]string, error) {
	if h.SillyNoopFunc == nil {
		return nil, errors.New("SillyNoopFunc is not defined")
	}
	return h.SillyNoopFunc(ctx, reqHeaders)
}
