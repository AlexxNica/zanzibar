// Code generated by zanzibar
// @generated

package contactsClient

import (
	"bytes"
	"context"
	"net/http"
	"strconv"

	"github.com/uber/zanzibar/examples/example-gateway/build/gen-code/github.com/uber/zanzibar/clients/contacts/contacts"
	"github.com/uber/zanzibar/runtime"
)

// ContactsClient is the http client for service Contacts.
type ContactsClient zanzibar.HTTPClient

// NewClient returns a new http client for service Contacts.
func NewClient(config *zanzibar.StaticConfig) *ContactsClient {
	ip := config.MustGetString("clients.contacts.ip")
	port := config.MustGetInt("clients.contacts.port")

	baseURL := "http://" + ip + ":" + strconv.Itoa(int(port))
	return &ContactsClient{
		Client: &http.Client{
			Transport: &http.Transport{
				DisableKeepAlives:   false,
				MaxIdleConns:        500,
				MaxIdleConnsPerHost: 500,
			},
		},
		BaseURL: baseURL,
	}
}

// SaveContacts calls "/:userUUID/contacts" endpoint.
func (c *ContactsClient) SaveContacts(ctx context.Context, r *contacts.SaveContactsRequest) (*http.Response, error) {
	// Generate full URL.
	// TODO: (jakev) insert params if needed here.
	fullURL := c.BaseURL + "/" + string(r.UserUUID) + "/contacts"

	rawBody, err := r.MarshalJSON()
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", fullURL, bytes.NewReader(rawBody))
	if err != nil {
		return nil, err
	}
	req.Header.Set("Content-Type", "application/json")
	return c.Client.Do(req.WithContext(ctx))
}
