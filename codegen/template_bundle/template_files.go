// Code generated by go-bindata.
// sources:
// codegen/templates/endpoint.tmpl
// codegen/templates/endpoint_register.tmpl
// codegen/templates/endpoint_test.tmpl
// codegen/templates/http_client.tmpl
// codegen/templates/init_clients.tmpl
// codegen/templates/main.tmpl
// codegen/templates/main_test.tmpl
// codegen/templates/structs.tmpl
// codegen/templates/tchannel_client.tmpl
// codegen/templates/tchannel_handler.tmpl
// codegen/templates/tchannel_server.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _endpointTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4b\x73\xdc\xc8\x0d\x3e\x93\xbf\x02\x66\x14\x17\xa9\x9a\xe5\xf8\x92\x8b\x52\x3a\x78\xb5\x0f\x27\x9b\xb5\x5d\x92\xb6\x7c\x70\xb9\x52\xad\x21\x66\xd8\x35\x9c\x26\xd5\xdd\xa3\x91\xcc\xf0\xbf\xa7\xd0\x0f\xbe\xc7\x96\x54\x4a\x6a\x2f\x12\xa7\x89\x06\xbe\x06\xd0\xc0\x07\xd6\xf5\xf2\x14\x34\xee\xaa\x82\x69\x04\x5d\x82\x44\x91\xa1\x84\x0d\xd3\x78\x60\x0f\x90\x6b\x5d\x01\x8a\xac\x2a\xb9\xd0\xb0\x2a\x33\x84\xd3\x25\xfc\xd0\x34\x61\x58\xb1\xd5\x96\x6d\x10\xea\x3a\xfd\x68\x1f\xdf\xb3\x1d\xd2\x1b\xbe\xab\x4a\xa9\x21\x0e\x83\x68\x55\x0a\x8d\xf7\x3a\x0a\x83\x88\x97\x4b\x5e\xee\x35\x2f\xe8\x87\x40\xbd\x24\xdd\x51\x18\x06\xd1\x86\xeb\x7c\x7f\x93\xae\xca\xdd\xb2\xda\x6e\x96\x28\x65\x29\x15\x49\x6d\xca\x74\x7f\x83\x32\x2d\xe5\x66\xf9\x95\x55\xb4\x54\xd7\xe9\xaf\x16\xdb\xc0\xe8\x72\x55\x70\x14\x9a\x76\x7d\x65\xe2\x2b\xbf\x61\x12\xfa\x7a\x49\xcd\xd2\xbf\x59\xca\xbd\xd0\x7c\x87\x64\xbc\xae\x25\x13\x1b\x84\x13\x9e\xdd\x2f\xe0\xa4\xda\x6e\xe0\xec\x1c\xd2\x7f\x88\x55\xb1\xcf\x30\x73\x46\x94\x39\x72\x50\xd7\x24\x90\xbe\x2d\x38\x53\xd6\x2e\x44\x6e\x6d\x80\x26\x22\x51\x14\x99\x75\x54\x50\xd7\x7c\x0d\xe9\xef\xa8\xf3\x32\x4b\x7f\x2a\x0f\x42\x69\x89\x6c\x07\x56\xe5\x0f\x30\x8b\x60\x22\x7e\x1c\xd3\x9a\x17\x48\x7b\x6e\x98\xc2\x8f\x4c\xe7\x30\x46\xf4\x3c\xf4\x1e\x9e\x7d\x4c\xc2\xb0\xae\xe1\xe4\x50\xca\xed\xba\x28\x0f\x06\xe3\x27\xf7\xa3\xb5\x41\x12\x12\x6f\xdf\x21\xcb\x50\xfe\xce\x2a\x23\x75\xd9\x5f\x98\x93\xfa\x0d\x1f\xd4\x44\xd2\x2c\x76\xd2\x6a\xac\x53\xcd\xe9\x54\x73\x3a\xd5\xbc\x4e\x9b\x31\x06\xfa\xd9\x39\x68\xae\x0b\x84\xf4\xa2\x5b\xf4\x72\x39\x13\x59\x81\x72\x24\xe8\xc2\x63\x56\xff\x03\x95\xe4\x42\xaf\x21\xfa\xab\x7a\x67\xa5\x23\xe8\x30\x55\xa5\x50\x78\xfd\x50\x61\x3f\xae\x97\xbd\x75\x23\x7a\xe0\x3a\xf7\x6f\x6d\xde\x2c\x97\x50\xd7\x7d\xf3\x4d\x03\x5c\x81\xce\x11\xdc\x22\xac\x4b\x49\x31\x4c\xdf\x5d\x5f\x7f\xa4\xc8\x53\xf0\x34\x59\x9a\x6c\x54\x5a\xee\x57\x1a\xea\x30\xb0\x47\x54\x70\xea\xae\x8c\x3b\xb3\x0a\xad\xc9\xf7\x78\xa8\x6b\x77\x48\xbb\xf7\xe7\xf6\xfa\x4b\x64\x1a\x15\x30\x6f\x3f\x5c\xef\xc5\xea\x1b\x3b\xe2\x30\xf0\x85\xe4\xd4\x5f\x3e\x7f\x7d\x17\x61\x02\xa7\x13\x98\x75\x18\x48\xd4\x7b\x29\xe0\xf5\xf8\x5d\x1d\x06\x1e\xfb\x99\xaf\x4f\x1e\x7b\x1a\x8f\x4f\x93\x2c\xc2\xa0\x71\x47\xb2\x31\xb9\xc4\xdb\x3d\x2a\xed\xb0\xab\xb1\xdf\x52\x7b\x98\xd8\xbb\x76\x82\x2d\x19\xea\x89\xc3\x60\xa5\xef\xc1\x15\xb8\xf4\xc2\xfe\x5f\x10\xfe\xdb\xde\x69\xaf\x50\xde\xa1\x24\x3b\x6e\x9f\x91\x50\x47\x24\x6c\x4e\x90\x6b\x6a\x7b\xf7\xa8\x70\xb4\xb7\xc2\xdd\x78\xbe\x86\x57\x12\x6f\xd3\x8b\x1c\x57\x5b\xf7\x26\xae\xeb\xbe\x5c\x2f\x23\xff\x72\x47\xb9\x68\x14\x3a\xd7\x92\x63\xfc\xc5\xee\x57\x28\x81\xc6\x16\x81\x34\xd9\x1a\x45\x64\xed\x8e\x49\x90\x76\xf5\xc7\x32\x7b\x00\x6b\xc8\x0b\x39\x3c\xe5\x96\x72\x9b\x40\x5d\x22\xcb\xde\x8a\xec\x0f\xb1\x63\x52\xe5\xac\xa0\x3d\xf1\xeb\x9e\x82\xe4\xef\xf0\xaa\xdc\x4e\xe1\xd8\x2a\x13\x06\xfd\x02\x53\xd7\x6d\xbd\x19\xc5\xdf\x45\xc6\x47\x7b\x11\x06\xc1\xbf\xca\xcd\x06\xe5\x99\x41\x61\x9f\x69\xd5\x61\x35\xcb\x26\x25\xdc\x61\x99\xc8\x20\xc6\xdb\xf1\x89\x13\xbf\xd8\xbb\xb5\x51\x94\xd0\x31\x57\x05\xa7\x65\xe7\xe2\x05\xa0\x94\x84\xd1\x03\x4c\x6d\x76\xc4\x2b\x7d\xbf\x30\x18\xac\x60\x62\xce\x56\x28\xa4\x50\x4e\xed\x91\x62\x5f\x22\x16\xf0\x62\x26\x06\xe8\x9f\x0f\x7e\x01\x83\xc8\x79\x3b\x2f\x01\x7a\x4e\xb5\x4b\x47\x4a\x28\x52\xf2\xea\x1c\x04\x2f\x5c\xa6\xf8\x98\xa6\x9f\x98\x14\x71\xe4\x3b\x8f\xa9\x80\x2d\x3f\xb1\x09\x85\x19\x18\x0a\x11\x51\xfc\x83\xaf\xac\x4a\xaf\xb4\xe4\x62\x13\x47\x6e\x99\x5e\xa7\x3f\xd3\x73\x9c\x50\x9d\x08\x12\x63\x42\xa5\x57\x28\x32\xb3\xee\x36\xfc\xed\xcd\x9b\x05\x44\x7f\x08\xbc\xaf\x70\xa5\x31\x03\x65\xee\xaa\x53\x9f\x0c\x52\x78\xf6\xbe\xd2\x69\x96\x4b\xb8\xfe\xf0\xd3\x87\x58\x71\x91\x61\xc1\x64\x72\x06\x7c\x57\x15\xb8\x43\x2a\xa9\x74\x87\x21\x77\xe2\xa5\x00\xef\xd7\xee\x86\x76\x17\x74\x26\xb6\xd6\x61\x84\xfd\x93\xe4\x1a\xff\x79\xf5\xe1\xfd\x8f\x0f\x1a\x4d\x3d\xf8\xf0\xdb\x95\x66\x7a\xaf\x2e\xca\x0c\x53\xfa\xd3\x34\xd3\x68\x09\x5e\x24\xce\x16\x65\xd0\x54\xdd\xa3\x35\x79\xe4\xc9\x00\x7a\x43\xb4\xa1\x2d\x34\xde\x45\xb3\x5c\x88\x5e\x4e\xba\x20\x2d\xba\x56\xed\x48\x8a\xe9\xa2\x3d\x5a\x34\xe6\x39\xbd\x1d\x4e\xcf\x70\xc3\xbc\xf2\x4b\xbc\xf5\x2d\x7a\xbd\x2f\x0a\x7a\x36\x1a\xe3\x81\xaa\x64\x70\x7d\xe3\x21\xb0\x64\xaa\x53\xcd\xea\x9c\x51\xda\x0b\xea\xf7\xb4\xda\x4d\x43\x3a\x32\x56\xd8\x3a\xc3\xb3\x88\xae\x8c\xc2\x8a\x15\x05\xb1\x08\xc9\xd7\x1a\xec\x36\x92\xe8\xe8\x50\xd3\xa4\xed\xef\xce\x58\xd3\xb4\xcc\xa2\xa7\xec\x11\xb4\xc2\x15\x66\xa0\x96\x57\xb9\x5b\x1c\xfa\xba\xfc\xad\x4e\x39\xe8\xde\x73\xb0\x7d\xcb\x3e\x0c\x41\xf9\x46\x1d\xfb\x74\x7b\x5a\xad\x37\x97\xf6\x68\x6b\xf7\x37\xbb\x85\xed\xca\x59\x98\x40\x3c\x5e\xb3\x75\x82\x5a\xef\xb7\x5a\xc0\xf3\xed\x9d\x9a\x5e\xdc\xe7\x91\x8b\x89\xdc\x71\x0c\xc3\x3a\xf2\x3c\x10\x81\xe1\x49\x43\x42\xf0\x28\x57\x3c\xcb\x5c\x70\xdc\xde\x53\x5d\xe1\xa7\x1a\x5f\xb4\xa7\xdc\xc7\x96\xc2\xb6\x38\x98\x64\x3d\x3b\x27\xc0\x77\x28\xf5\x75\x39\xa2\xbc\x17\x7d\xc1\x58\x26\xbd\x19\xca\xea\xf0\x87\x3a\x3b\x87\x1d\xab\x3e\x2b\xd3\x61\xbe\xd8\x7f\x75\xe3\x2a\x7c\x2c\x10\xe2\x02\xc5\x74\x3e\x4a\xe0\x8d\xcd\x4c\xe2\x63\xe5\x16\x6e\xca\xb2\xb0\x3f\x72\xb0\x4a\x86\x9c\xae\x37\xd8\x2e\xe0\xc4\xd0\xb3\x89\x4e\x12\xcb\x17\xa4\xcd\x70\x37\x87\x30\xfd\x15\x75\x4c\x83\xe1\xb6\x69\xa8\xc7\x59\x7a\x47\x5d\x78\x70\x90\xcf\x51\x5d\x53\x47\xbb\x1f\x4d\x7c\x66\xdb\x17\x38\x87\xbc\xcf\x33\x9b\x66\xc4\xbb\x46\x65\xd7\xdf\xc6\x51\xe5\x74\xd4\xcb\x39\x07\x6f\x5b\xe7\x74\x33\x9d\x71\x8c\x39\x71\xf0\xef\x8e\x7c\xb4\x83\xc1\xa3\x2a\x9b\x25\x27\x83\xe3\x25\xc6\xaa\x4f\xd5\xa3\xfc\xe9\x85\xec\xb4\xed\x72\xc8\xe4\x26\x4e\x7a\x82\x33\x5a\x47\x56\x44\xb0\x16\xf0\x7c\xe7\x10\x8b\x9a\x02\xf7\xbc\x69\xe8\xa4\x81\xc9\x17\x72\xda\xf7\xec\x7f\xcf\x79\xea\xe9\xce\x7b\x71\x67\xc1\xa0\x90\xcc\xfb\xee\x7f\xe8\xab\x63\xe6\xc7\xae\xfb\x33\xe5\xd7\x63\x5c\xf6\x7f\x4c\xb7\x47\xb9\xf0\xf8\x04\x73\x18\xce\x2f\x17\xe5\xbe\xc8\x40\x94\x1a\x76\x6c\x8b\x9e\x86\xb9\x89\xe8\x69\x83\xcb\xcc\x7c\x71\x51\x0a\xc5\x33\x94\x6e\x20\xe2\x62\x03\x15\x93\x9a\xb3\xa2\x1d\x35\xb8\xb0\xed\x10\x56\x4c\x61\xda\x4e\x32\x70\x6c\xd0\x68\x1a\xc1\x0b\x03\xc0\x47\xc0\xfc\xee\x2d\xda\x22\x4f\xc3\xca\x72\x09\xbf\xf0\x42\xa3\x34\xd5\x7e\xc7\xaa\x76\x36\x68\xcd\xaf\x65\xb9\xf3\xa7\xd6\xa5\x9f\xab\xbc\x58\x1a\xb6\x63\xd3\x19\xbc\xcd\x32\x50\xfb\xca\x7c\x52\xa6\x69\xef\xfa\x22\x67\x42\x60\x01\xbe\xa3\x9a\x99\x81\x81\x3a\x70\xbd\xca\x21\x47\x89\x66\x84\xe9\x35\xdc\x19\x8e\x69\xdf\xd6\xc7\x1a\xa5\x9a\x34\xca\x4e\x63\x7a\x65\x1b\x64\xdb\xfd\xd4\xa8\xfb\x8d\x53\xf1\xb3\xef\xa6\x5f\x92\x7e\x43\xfc\xfe\x54\x67\x22\xd2\x19\x36\xee\x9e\x19\xd6\xac\x6b\x3b\x72\x72\x84\x9a\x58\xb9\x78\x78\x6d\x92\xbe\x1d\x37\xd1\xcf\x5b\x74\xb9\x6d\xa6\x38\xdf\xc8\xa7\xb4\x29\x31\x8b\x33\xdd\x9d\xf6\x1a\xba\xfe\x38\x06\x75\x53\x66\x0f\xc4\xf5\x9c\xc8\x80\xf1\xd9\x0f\x87\x03\x13\xf6\xd3\xe1\x84\xad\xbd\x9e\xca\xd5\xd6\xf1\xfe\xa3\xfb\x16\x1f\x16\x70\x72\xc7\x8a\x3d\xfa\x4f\xd0\xb4\xf9\x17\x8e\x45\xe6\xbf\x2d\xf7\xc4\x05\xdb\xe1\x02\x4e\xb4\x1b\xeb\x4e\xba\xcf\xb9\x2d\x3e\xb7\xab\xbd\x49\x66\x8f\x31\x34\x43\x29\x53\x7f\x42\xf3\xbe\x69\xe0\x1c\xea\xda\xe9\x6f\x1a\xe3\x85\x4e\xc4\xa2\x6c\x1a\x93\x45\x7d\xa6\x37\x79\xee\xa5\xcf\xc0\x5c\xd8\xf4\xa7\xf1\x49\x20\x47\x83\xd0\x20\x92\xea\x68\x24\xbf\x9d\x6e\x3e\x90\x43\x45\x2e\x88\x23\xce\x4e\x31\x1c\xdc\xfb\x36\xb9\xd7\x14\x0f\x45\xb5\xa4\xa2\x6a\x46\x97\x3c\x0d\x83\xac\x1d\xea\x2f\x7b\xb7\x60\x66\x18\x48\x0c\x8c\x2e\xd7\xa7\x1b\x87\x9e\xe9\x1e\xbb\xa7\xff\x06\x00\x00\xff\xff\x73\x0e\x44\xc3\x2b\x1b\x00\x00")

func endpointTmplBytes() ([]byte, error) {
	return bindataRead(
		_endpointTmpl,
		"endpoint.tmpl",
	)
}

func endpointTmpl() (*asset, error) {
	bytes, err := endpointTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "endpoint.tmpl", size: 6955, mode: os.FileMode(420), modTime: time.Unix(1492806075, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _endpoint_registerTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x6f\xd4\x30\x10\x3d\xdb\xbf\x62\x14\x55\x68\xb3\x4a\x13\xce\x95\x38\x20\x40\xb4\x07\x4a\x55\x2a\x71\x40\x1c\xbc\xc9\x34\x6b\x6d\xd6\x09\xce\x84\xed\xd6\xf8\xbf\x23\xc7\xce\x57\x77\x8b\xc4\x31\x33\x6f\x66\xde\x7b\x33\xb1\x31\x97\x90\xad\x81\x70\xdf\x54\x82\x10\xa8\x06\x8d\xaa\x40\x0d\xa5\x20\x3c\x88\x23\xa0\x2a\x9a\x5a\x2a\x02\x8d\xa5\x6c\x49\x0b\x92\xb5\x82\x75\x06\x97\xd6\x72\xde\x88\x7c\x27\x4a\x1c\x51\x2d\xe7\x72\xdf\xd4\x9a\x60\xc5\x59\x94\xd7\x8a\xf0\x89\x22\xce\x99\x31\x5a\xa8\x12\xe1\x42\x16\x4f\x09\x5c\x34\xbb\x12\xae\xde\x41\x7a\xa3\xf2\xaa\x2b\xb0\xb8\xf3\x7d\xda\xbe\x2b\x33\xc6\x01\xd2\xf7\x95\x14\xed\xad\xd8\xa3\xb5\x10\x85\x58\x00\xfa\x68\xe4\xa0\xa8\x0a\xc7\x84\x45\xa5\xa4\x6d\xb7\x49\xf3\x7a\x9f\x75\x1b\xd4\xd9\xb3\x50\xcf\x72\x23\x74\xa6\x3b\x45\x72\x8f\x11\x8f\x39\xcf\x32\xf8\x34\x70\x05\xd9\x82\x80\x96\x74\x97\x13\xd0\x56\x10\x6c\xeb\xaa\x68\x41\x54\x15\xd0\x76\x2e\x8a\x8e\x0d\xce\xea\x42\x89\x39\x91\x35\x9a\xe5\xb4\x4d\xf8\x41\xd4\x90\x4e\xaf\x85\x2a\x2a\xd4\x41\xdb\xfa\x4c\xea\xe1\xd8\xa0\xaf\xf2\xfa\x6c\x4f\xfd\x83\x46\x41\x38\x35\xde\xd4\x35\xb9\x9d\x34\xed\x92\x70\xca\x1f\x3b\x95\xbf\x84\xaf\x38\x1b\xb6\xba\x1e\xcc\x49\x3f\xfb\x48\xc2\x63\x90\x8a\x50\x3f\x8a\x1c\x8d\x75\xda\x34\x52\xa7\x15\xbc\x19\xeb\x0d\x67\x27\x82\xcf\x29\xed\xa5\x2e\x35\x5e\x71\x16\xc2\x8b\x05\xa6\xb7\x78\xe8\xa3\x5f\x90\xb6\x75\xe1\x83\x43\xb7\x55\x20\x1b\x27\x7d\x4b\xef\x03\x1b\xac\xb8\xef\xcf\x11\x35\x1c\x64\x55\x85\xe3\x44\xdd\xef\x6e\xda\x5b\xef\xc2\x80\x5c\x95\x67\x64\x83\xae\x3b\x57\x37\x65\xee\xfb\x40\xec\x1c\x18\x1b\x39\x95\x2f\xcd\x2c\xe3\x74\xb5\x1e\x3f\xe3\xd3\x1b\xff\xd7\x31\xf8\xa9\xe9\x48\x8d\x33\x16\xcd\xaf\xc0\xfb\x61\x6d\x94\xc0\x22\x7e\xfd\xf0\x70\x77\x27\x68\xeb\x32\x9c\xb1\x91\xf4\x2d\x1e\x3c\xef\xd1\x3c\x67\x78\xe9\x30\xcb\xc6\x43\xfe\xe6\x63\x68\xb1\x4c\x87\xa5\x4d\x59\x63\x40\x3e\x42\x85\x0a\x66\xe4\x64\x51\x54\x78\x10\x1a\x5b\xf8\x03\x0a\xe1\x6d\xd8\xfb\x82\xcf\x37\x12\xf9\x6e\xf5\xe3\xe7\x18\x9b\xca\xfc\x14\x77\x4e\x27\x07\xb5\x1f\x41\xce\xb6\xf3\x33\xc3\x30\x77\x4f\x13\x3c\x9d\x2e\xca\x63\xbf\x0b\x8d\xbd\x0b\x83\x0f\xaf\x55\x7c\x6d\xdc\x93\xd6\x9a\x11\x13\x08\xed\xf0\x98\xc0\xc5\x6f\x51\x75\x9e\xcb\xac\x32\x94\x8c\x4c\x42\xef\x1d\x1e\xad\x85\x2b\x30\xc6\x97\x59\x3b\x0d\x46\x55\xcc\xe0\x21\x11\x27\xfc\x24\x6b\x93\xd9\x7f\xfc\xea\xa3\x11\xbe\xee\xf1\x57\x87\x2d\xc5\xe1\x33\xac\xec\x12\xb0\x6a\x71\x68\xf8\xdf\xdd\xa6\x2e\xfe\x97\x63\x8c\x7b\xaa\xf1\xfc\x3d\xfa\x1b\x00\x00\xff\xff\xc0\xf6\xeb\x8c\x3b\x06\x00\x00")

func endpoint_registerTmplBytes() ([]byte, error) {
	return bindataRead(
		_endpoint_registerTmpl,
		"endpoint_register.tmpl",
	)
}

func endpoint_registerTmpl() (*asset, error) {
	bytes, err := endpoint_registerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "endpoint_register.tmpl", size: 1595, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _endpoint_testTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\xdf\x4f\xe3\xb8\x13\x7f\xb6\xff\x8a\xd9\x08\x7d\xbf\x09\x9b\x75\x74\xaf\x9c\x78\x59\x60\x97\x3b\xb4\x80\xa0\xd2\x3d\x20\xc4\xba\xe9\xb4\x8d\x9a\x3a\xc5\x99\x52\x81\xc9\xff\x7e\x1a\xc7\x09\x29\x14\x76\xef\xa5\x9a\x8e\xe7\x87\xe7\x33\x9f\x19\xc7\xb9\x6c\x1f\x08\x97\xab\x52\x13\x02\x55\x60\xd1\x4c\xd0\xc2\x4c\x13\x6e\xf4\x23\xcc\x89\x56\x80\x66\xb2\xaa\x0a\x43\x40\x58\x53\x0d\xfb\x19\x7c\x69\x1a\x29\x57\x3a\x5f\xe8\x19\x82\x73\xea\xb2\x15\xcf\xf5\x12\xf9\xa4\x58\xae\x2a\x4b\x10\x4b\x11\x8d\x1f\x09\xeb\x48\x8a\x68\xa5\x69\x9e\x4d\x8b\x12\x59\x60\x85\x41\xca\x38\x3c\xcb\x1c\xb8\x30\xb3\x48\x4a\x11\xcd\x0a\x9a\xaf\xc7\x2a\xaf\x96\x59\x4d\x16\x29\x9f\xdb\xcc\x9f\x4f\x1f\x33\x5d\xd7\x68\x29\xda\xb6\x5a\x8f\xd1\x66\x4f\xda\x3c\x15\x63\xdd\x9a\x66\x65\x31\xce\xc6\x68\xf2\xf9\x5d\x28\xe4\xf7\x5c\x58\xb8\x1b\xeb\x7c\x81\x66\xf2\x1f\x3c\xfa\x1c\x89\x94\xce\x6d\x0a\x9a\x83\xfa\x81\x34\xaf\x26\x1e\x28\xe7\xbe\xc0\x5e\x5e\x16\x68\x28\xe0\x04\x07\x87\xa0\x8e\xab\x8d\xe1\x02\xf5\x72\x08\xdf\x6b\x0f\xaf\x3b\x38\x04\x2a\xa8\xc4\xa1\xd3\x35\xda\x87\x22\x7f\x63\x1f\xf2\x6e\x27\xd8\x7d\x99\x56\xdb\x25\xd8\x52\x2a\xaf\x7d\x0e\x59\x77\xfa\x5d\xe1\xfd\x1a\x6b\x1a\x3d\xae\xbc\xfb\x74\x5d\x96\x2c\x7b\x47\x88\xb7\x4c\x13\x35\x34\x8e\xb7\xb1\x48\xde\x0b\x5f\xaf\x2a\x53\xe3\xef\xc6\x1f\x58\xbf\x9f\x60\x8e\x7a\x82\xb6\xf6\xe8\x5c\xe1\xfd\x69\xf8\xcb\x94\x95\xce\x59\x6d\x66\x08\x7b\x6a\x84\x35\x5d\xd3\x7a\x5c\xb3\x7e\xba\x36\x39\xb0\xc6\x39\x75\xaa\xcd\xa4\x44\xfb\xd7\x31\x3c\xc3\x88\x91\x69\x1a\xe7\xbc\x79\x80\x2b\x28\x2f\xce\xba\xfb\xc4\x04\xfb\x81\xdb\x6a\x94\x80\x93\xe2\x41\x5b\xc8\xab\xb5\x21\xb4\x50\x18\x92\x52\x04\xf6\xa4\x80\xd6\xfa\x4e\x63\x4d\xdf\x5b\x9d\x3a\xb2\xa8\x09\xc3\xbf\x98\x52\x30\x45\x99\xc2\xff\x86\x26\x17\x2b\x2a\x2a\x53\x3b\x29\xc4\x99\xa9\x36\xe6\x74\x34\xba\xfc\xda\x52\xb8\x3e\x80\x9b\xdb\x9a\x6c\x61\x66\x2e\x72\x6e\xc8\xa8\x67\xc8\xf5\x12\xcb\xa6\x89\x9a\x54\x0a\xc1\x35\x7c\x2d\x8c\xb6\x8f\x07\xd0\xcd\xa8\xfa\xbb\x2a\x4c\x2c\x85\x10\x33\xa4\xe3\xc2\xb2\x5f\x9c\xa4\x10\x29\x15\xf5\xbf\x4b\x5d\x18\x35\xab\x22\x0e\x92\xa4\x52\x34\x89\x14\xc5\x14\x3e\xb5\x83\xaa\xce\xab\x13\x6b\x2b\xcb\x37\x47\x6b\x53\x88\x66\x15\xc1\xb8\xaa\xa8\x26\xab\x57\xac\x8b\x3c\x2a\xc2\x22\xad\xad\x91\xa2\x91\x62\x82\xd3\x97\x05\xa4\x8e\xca\xaa\xc6\x38\x91\x52\x74\x0d\x52\x47\xbe\x8c\xae\x43\x62\xaa\x17\xe8\x5c\xd0\x06\xa6\xf7\xad\x68\xa9\x63\xf2\x78\xe3\x57\x59\x4f\x94\x7f\x6c\x41\x68\x53\xb0\xb0\x1f\xf4\x9e\xa0\x7c\x19\x29\xfa\x54\x7b\x8b\x14\xf6\x1e\x3c\x5d\xda\xf0\x03\xd2\x30\xa9\x84\x08\x75\x9e\xdc\xaf\x75\xe9\xb1\x22\x46\x42\x30\xda\x0f\x4d\xe3\x61\x11\x56\xb5\x3e\xea\x3b\x52\xcc\x27\x8b\xa6\x89\x92\xc4\xe7\x41\x33\x61\x96\x7d\x98\xb2\xde\x4e\xb9\x09\xe1\xe2\x44\x5d\x0f\x02\xa6\xd0\x25\x1d\x46\x66\x73\x5f\x6b\xf0\x71\x6e\x2f\xac\x26\x75\x71\x76\x4d\x9a\xd6\xf5\x51\x35\x41\xc5\x3f\x0d\x37\x4f\x48\x21\xb2\x0c\x46\x17\xc7\x17\xf1\xd3\x26\x39\x80\x19\x1a\xb4\xfc\x38\xb4\xec\x01\x1b\x10\x54\x52\x70\xa7\xef\x7a\xde\x86\x44\xf1\xcd\x2d\xef\xfc\x18\x7e\xf6\x4d\xe9\x40\xbf\xf6\x54\x6c\x9a\x9f\x49\xf2\xa7\xf7\xfa\x74\xc8\x84\xf6\x04\x10\xa4\xbe\x69\xd2\x65\x1c\xe5\xda\xfc\x9f\x60\xc3\xb1\x80\x7b\xdb\x67\xf4\x85\x71\x49\x61\x7e\x3e\x7f\x66\xbe\xf4\x03\xa4\x86\xcc\x8f\x93\x9b\x77\x19\x7f\x1b\x06\xf9\x1b\xf3\x42\xb6\xcd\xda\x5a\x7e\x1c\xa8\x15\x7b\x5c\xdf\x9c\x5f\x6a\x9a\xfb\xd3\x0f\xe9\x97\x4a\xd1\x52\x17\x4d\xbb\x7e\xa5\x18\xec\xa0\xa5\x5e\xdd\xb4\xe3\xd9\x4d\x69\xc3\xb6\x50\x4c\x5f\x56\x95\xef\xf9\x0e\x72\x9c\x84\x37\xf9\x35\x23\x83\xdf\x4d\x47\x8b\x5b\x38\xec\x89\x21\x5f\x68\xc1\xeb\xb0\xe3\x9e\xc5\xba\x6f\x62\x87\xe5\x0f\xbd\xc0\x30\x13\x1d\x44\x6a\x27\x3a\x3b\x0e\x3b\x68\xa4\xe8\x6e\xc3\xa2\xff\x10\x50\xe7\xb8\xb9\x6a\x99\x18\x68\xc2\x2c\x19\xd4\xb2\xf6\xbb\xb7\xa7\x89\xc7\xef\x97\x0b\xa5\xfd\x48\x61\xfd\x9b\x6d\x22\xb7\x27\x94\x52\xf8\x78\x02\x52\x66\x9b\x7a\x51\x27\xbf\x00\x7f\x7b\x36\x5f\x6f\x03\xea\xe0\xe9\x76\x01\x07\xdf\xb9\x0c\xc4\xa0\x37\xaf\x6f\xfc\x47\xda\xbd\x18\x89\x6c\xf8\xa1\xea\xc8\xf4\x22\xfd\x1b\x00\x00\xff\xff\xb6\x78\x59\x91\xc7\x09\x00\x00")

func endpoint_testTmplBytes() ([]byte, error) {
	return bindataRead(
		_endpoint_testTmpl,
		"endpoint_test.tmpl",
	)
}

func endpoint_testTmpl() (*asset, error) {
	bytes, err := endpoint_testTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "endpoint_test.tmpl", size: 2503, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _http_clientTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\xdd\x6f\xdb\x36\x10\x7f\x16\xff\x8a\x9b\x90\x16\x52\xa2\x48\x7b\x36\x96\x0d\x6d\x5a\xa4\x59\xdb\xa4\xc8\xc7\xf6\x50\x14\x03\x23\x9d\x6d\xc2\x32\xa5\x90\x74\xe3\x54\xe5\xff\x3e\x1c\x29\xc9\xb2\x9d\x64\xc1\xba\xae\xfb\xc8\x8b\x25\xf2\xee\xf8\xbb\xe3\xef\x3e\xa2\xa6\xd9\x87\x6c\x17\x0c\xce\xeb\x92\x1b\x04\x53\x81\x42\x59\xa0\x02\x2c\x26\x08\x13\x6e\xf0\x86\xdf\xc2\xd4\x98\x1a\xf2\x52\xa0\x34\x90\x57\x05\xc2\x6e\x06\xfb\xd6\x32\x56\xf3\x7c\xc6\x27\x08\x4d\x93\xbe\xf3\x8f\x27\x7c\x8e\xb4\x23\xe6\x75\xa5\x0c\x44\x2c\x08\xaf\x6e\x0d\xea\x90\x05\x61\x5e\x49\x83\x4b\x43\x8f\x12\x4d\x46\x56\xe9\x59\x1b\x95\x57\xf2\x63\xc8\x58\x10\x4e\x84\x99\x2e\xae\xd2\xbc\x9a\x67\xf5\x6c\x92\xa1\x52\x95\x72\xba\x83\x8d\xc5\x15\xaa\xec\x13\x97\x9f\xc4\x15\x57\x99\x5a\x48\x23\xe6\x18\xb2\xa0\x69\x14\x97\x13\x84\x1d\x51\x2c\x13\xd8\xa9\x67\x13\x18\x1d\x40\x7a\x2c\xf3\x72\x51\x60\xd1\x02\xd4\x0e\x79\xd0\x34\x24\x90\x3e\x2b\x05\xd7\x1e\x33\x84\xed\xda\x9a\x27\xce\x2e\xca\xc2\x5a\x16\x33\x46\xf1\xda\xf1\x81\x38\x7e\xe1\xac\x1f\x76\x2f\x64\xb5\x43\x90\x9e\xa3\xfa\x28\x72\xd4\x6e\xad\x57\x21\x8b\xa4\x64\x84\x29\x11\x52\xf7\xfa\x19\x6a\x25\xa4\x19\x43\xf8\x44\x7b\x5b\x21\x58\xcb\xb2\x0c\x9a\x66\xa0\x66\x2d\x08\x0d\x66\x8a\x6b\x77\x31\xae\x14\x68\x7f\x14\x5d\x81\x17\x4c\x99\xb9\xad\x71\x4b\x5d\x1b\xb5\xc8\x0d\x34\x2c\xe8\x21\x6b\xa3\x84\x9c\xb0\xe0\xd5\xc5\xc5\x3b\xbf\x08\x00\xbb\x5d\x64\xd3\xd5\x32\xb3\x8c\x10\x9d\xe0\x4d\x2b\xa6\xd0\x2c\x94\xd4\xc0\x41\xe2\xcd\x63\x20\x8d\x17\x32\x5f\xe9\x47\x2c\xe8\xa8\xb5\x3a\xee\xc8\xaf\x24\x2c\x86\xdd\x4d\xf0\x0d\x0b\x44\x4d\xa1\x6b\xd5\xd2\xc3\x4a\x8e\xc5\x24\x7d\xbb\xd0\xe6\x08\xcd\xb9\x73\x24\x0a\xbd\x8e\x4e\xdb\x83\xe1\x33\xe4\x7c\x8e\xa5\xb5\xa9\xa8\xc3\x98\x05\x8e\x92\xf7\x5a\x39\x96\xe6\x21\x13\xa4\x1c\xc6\x8c\x05\x57\x5c\xe3\xe5\xd9\x1b\x32\x14\x92\xeb\xa3\x2c\x0b\x61\x0f\x44\x0d\x7b\x10\x8e\xe8\xb1\x65\x74\x7a\x6c\x2a\x1e\x09\x69\x22\xd2\x8d\x63\x16\xf8\xb8\xc1\xd3\x0d\xff\x1a\x16\xf4\xb7\x32\x72\x3c\xec\x38\x66\x6d\x98\xb0\x60\x70\x43\x23\xe8\x03\x76\x82\x37\xab\xf5\xa8\xf5\x29\x81\x16\x5e\x9c\xb0\xc0\xd2\xc5\x35\x4d\xb6\x0b\x70\x70\xdf\x1f\xbc\x45\x33\xad\x8a\x07\x04\xfa\x6c\xef\xe9\xed\x55\x88\xdd\x9e\xa8\x03\x42\x5b\x0b\x39\x2f\x4b\x4d\x5e\x38\x06\xbd\xe3\x66\x6a\x6d\x08\x28\x8b\xba\x12\xd2\xa4\x2e\x23\xc4\x18\xb8\x2c\x20\xc2\x6b\x48\xcf\xf0\x7a\x81\xda\x5c\x10\x6b\xc3\x30\xee\x16\x75\x5d\x49\x8d\xfd\xaa\xb5\x9e\x44\x51\xbe\x45\x8f\x78\x13\x42\xc4\x82\xdc\x2c\xa1\xad\x37\x74\xcd\xf4\x9b\xb0\x60\x8a\xbc\x40\xa5\x61\xce\xeb\xf7\x9e\xfd\x1f\xfc\x0f\xb1\x2e\xda\x5e\x05\x57\x80\x62\x68\x58\xd3\x60\xa9\x91\x70\x6f\x43\xfe\x3b\xb0\xed\x36\xcd\x5a\x4c\xac\x4d\xee\x90\xbc\x1f\xef\x5a\x34\xbf\x3a\xe0\x40\x81\x07\xdc\x87\xc9\xda\x47\x86\xf8\x9b\x41\xfb\x13\x11\x76\x6d\x21\x50\x78\x4d\xb5\x60\x98\x97\x3e\x27\x89\xfe\xed\x39\x11\x0b\x82\xbc\x6f\x16\x89\xcb\x8e\xb6\xc1\x24\x90\x0f\x4a\x6d\xc2\x02\xaa\x31\x59\x06\x47\x28\x51\x51\x53\x1e\x2f\xca\x12\x2e\xcf\xde\xa4\x2c\xa0\xc7\xb6\xf4\x0c\x95\xd2\xe7\x3e\xe7\xa9\x57\xed\x43\xdb\x05\x67\x09\xec\x68\x9c\xcc\xa9\x2a\x53\xa7\xa2\x44\x3c\xf7\xef\x7d\x0f\xdc\x6f\x09\xd2\x09\xa6\x9e\x20\xda\x70\x23\xf2\x90\xa4\xf6\xc2\xac\x69\x56\xdb\xb8\x34\x6d\x4f\xdc\x07\x47\x30\x2f\x12\xee\xf9\xf0\x44\x2a\x1d\x48\x3f\xaf\x8a\xdb\xe3\x02\xa5\x11\x63\x81\x0a\x3e\xfb\xc6\x67\x6d\xdc\xea\xcb\x62\x85\xc3\xc7\x92\x9e\xc5\x18\x24\x6e\xa6\x18\x89\xa1\x52\xe4\x88\xc2\xeb\xf4\x57\x25\x0c\xfe\x7c\x7e\x7a\x12\x75\x65\xc6\x97\x24\x17\xce\x36\x48\x09\xb4\x2c\x48\x40\xb9\x13\x5b\x76\x7d\x81\x1d\x29\xca\xb8\x9f\x07\xa0\x1d\x9e\x7e\x10\xe3\x75\xb4\x92\x00\xff\xd8\x55\xcd\x80\x22\xac\x14\x7c\x77\x40\xea\xd4\xc9\xba\x2e\xe0\x5c\xbd\x23\x3b\xad\x95\xa2\x74\x44\xeb\x30\xbb\xf7\xc1\xa2\xe7\x9d\xa3\x9e\x76\x6b\x9d\x3f\x2f\xaa\x28\x37\xcb\xf8\xab\x1e\xea\x4e\xad\x5f\xb5\x19\x36\x3a\xd8\x4e\x92\xc6\xb2\x80\xe6\x80\x99\x83\xe5\xd8\xa8\x50\xa7\x5e\xa5\x05\xd3\x5b\x78\x3f\xfb\x00\x07\x83\xfd\xf4\x08\x4d\x34\x8b\xfb\x93\xd2\xc3\x29\xe6\xb3\xd3\xd7\x1d\xde\xe8\xfd\x07\x21\x0d\x19\x19\x70\x5d\xc8\x02\x69\xe6\x73\xc3\x29\x91\xfd\x17\x5e\x8a\xe2\xdc\x70\xb3\xd0\x87\x55\xd1\x0d\x7d\x9e\x5d\x5e\xda\xda\xa4\x75\x8a\xaa\x4c\x55\x60\x2b\x30\xe0\xa5\x8d\x3b\x42\x0e\x7a\xd5\x46\x5b\xa2\xd5\xa8\x44\x09\xe9\xcb\x65\x8e\xb5\x11\x95\xd4\x31\x7c\x1f\x93\xbe\xbe\x11\x26\x9f\x3a\xdf\x56\x50\x9c\xff\x39\xd7\x6e\x3c\x3a\x7d\xbd\xda\x48\x0f\x1d\x88\x11\x0b\x02\x4a\xff\x8b\xd3\x17\xa7\x23\x28\xab\x09\xf0\xab\x6a\x61\x60\x21\x71\x59\x63\x6e\xb0\x80\xab\xaa\xb8\x05\x37\x55\xff\x44\xc2\xbf\x79\x0a\xf8\x20\x9e\x21\x2f\x9e\x95\x65\x14\xd3\xce\x36\x0b\x7a\x1e\x0c\x6e\xc0\xa9\xd3\x1e\x05\xe0\xce\x7d\x29\x4a\x47\xb7\xb5\xa6\x72\x87\xd7\x5f\xe6\xf4\x47\xae\xdc\xb1\x14\x5f\x2a\x1d\xb0\x55\x90\x49\x6a\xc3\x55\x59\x5c\xca\x39\x57\x7a\xca\x4b\xd2\x89\x9e\x0e\x2d\xfc\x51\x10\x1c\xbb\xef\x8e\xc4\x20\x14\x6b\x26\x93\x47\x44\x66\x3b\xb7\xfe\x8d\x5c\x78\x90\x0c\x9b\xff\x6c\x61\x47\x03\x97\x7d\x2b\x52\xb8\x3b\x6b\x3d\x5c\x09\xa5\xf7\x13\x60\x65\x68\x4d\xe1\xf1\xf7\xdf\xeb\xfc\xa5\x19\xb0\x32\xeb\x7c\x6f\x8b\x61\x50\xe0\x98\x2f\x4a\xf3\x6d\x73\xd6\x0e\x9b\xdb\xff\x30\xfd\xfe\x03\x5c\x7c\x20\x12\x0f\x09\xfd\x23\x58\xf9\x10\x76\xbb\xfa\x7a\xc2\xd6\x26\x10\x3f\xe1\xdd\x35\x81\xb4\xf2\x9b\x06\x2b\xa5\xd3\x97\xf4\x33\xa6\x51\x3a\xbc\x5c\xf9\x30\xfc\xfa\xd0\x51\x05\xa2\x27\x45\x1c\x26\x1b\x69\xe0\x66\x6b\xcb\x36\xe7\xb7\xf5\x7f\x6a\xfb\xc1\xed\x1e\xb1\xee\xd3\x4e\x2f\xf7\x7b\x00\x00\x00\xff\xff\xd0\x10\x31\xea\x44\x13\x00\x00")

func http_clientTmplBytes() ([]byte, error) {
	return bindataRead(
		_http_clientTmpl,
		"http_client.tmpl",
	)
}

func http_clientTmpl() (*asset, error) {
	bytes, err := http_clientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http_client.tmpl", size: 4932, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _init_clientsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xcf\x8a\x1b\x31\x0c\xc6\xcf\xf1\x53\x88\xb0\x94\x24\x64\xc7\xf7\x85\x1e\xca\x42\xcb\x5e\x96\x1e\xf6\x05\x94\xb1\x32\x23\xe2\xb1\x07\x5b\x26\x4d\xcc\xbc\x7b\x99\xbf\x61\x1a\x7a\xb4\xf4\x7d\xb2\xbe\x1f\xca\xf9\x15\xf4\x01\x84\x9a\xd6\xa2\x10\x88\x87\x40\xce\x50\x80\x0a\x85\xae\x78\x83\xd2\x32\x39\x01\x76\x2c\x8c\x96\xef\x28\xec\x1d\x1c\x34\xbc\x76\x9d\x52\x2d\x96\x17\xac\x68\x52\x45\xa5\xb8\x69\x7d\x10\xd8\xa9\x4d\xce\x01\x5d\x45\xf0\xc2\xe6\xcf\x11\x5e\xda\x4b\x05\x6f\xdf\xa1\xf8\x70\xa5\x4d\x86\xcc\xef\xd1\x19\x87\x39\x9b\x9c\x7b\x41\xf1\xc3\x32\xc6\x4f\x6c\xa8\xeb\x60\x3b\xd5\x26\xe1\x58\xdd\xf6\x52\x72\xa6\xf7\x6c\x2b\x96\x3a\x9d\x8a\xd2\x37\x3a\x9d\x28\xe8\x3b\xba\x3b\x9f\x30\xe8\x90\x9c\x70\x43\x5b\xb5\x57\x4a\x6b\x78\x1f\x97\x03\x83\x82\x51\x42\x2a\x25\x05\x02\xa9\x51\xa0\xf6\xd6\x44\x40\x6b\x41\x6a\x82\x8a\x1c\x05\x14\x32\x4b\x1e\xad\xe1\xab\xe6\x08\xb1\xf6\xc9\x1a\xf0\xce\xde\x06\xcf\x2c\x58\x2c\x70\x0e\xbe\x81\xd8\x52\x19\x95\xdc\x5a\x5a\x3e\x1d\x3f\x84\xfc\x04\x64\x9c\xf0\xe1\xce\x7e\xe0\xf2\xfe\x78\xce\x44\x1e\x8a\xe2\x27\x93\x35\x13\x98\xc3\xba\xb5\xe2\x53\xac\x7b\x5f\xb7\x76\x6a\x3c\xb8\x75\x23\x93\x40\x28\x34\x2f\x79\x65\x6b\xa1\xc1\x0b\x0d\x28\xe6\xf0\xe7\xe4\xca\xb5\x70\xa7\x36\xf3\x5d\x1c\x66\xda\xc5\xaf\xb1\x72\x54\x7b\x60\x27\x14\xce\x58\x52\xee\xfa\xc4\x81\x24\x05\x07\xdf\x26\x77\x56\x9b\x27\x08\xfc\xbf\xfc\x03\x00\xfe\x27\xfb\x1b\x2c\xd5\x75\xec\x4f\xba\x8e\x03\x76\xd3\x7e\xfb\xe3\x30\x62\x3a\x95\x3e\xf5\xdf\x00\x00\x00\xff\xff\xf8\x2d\xf5\xb9\xeb\x02\x00\x00")

func init_clientsTmplBytes() ([]byte, error) {
	return bindataRead(
		_init_clientsTmpl,
		"init_clients.tmpl",
	)
}

func init_clientsTmpl() (*asset, error) {
	bytes, err := init_clientsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "init_clients.tmpl", size: 747, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdc\x36\x10\x3d\x93\x5f\x31\x25\x72\x90\x0c\x59\xea\x39\x80\x0f\xdb\x35\x62\x6c\x51\xd8\xc1\x3a\x40\x0f\x45\x61\x8c\xa5\x59\x9a\x09\x45\x0a\x43\xca\xa9\xad\xea\xdf\x0b\x4a\x5a\x79\x1d\x3b\x40\x6f\xe2\xcc\x9b\xc7\x37\x8f\x6f\x77\x18\xce\xa1\x3a\x83\x48\x6d\x67\x31\x12\x44\x0f\x4c\xae\x21\x06\x8d\x91\xbe\xe3\x13\xb4\x68\x5c\xa9\x3d\x9c\x55\x70\x3e\x8e\x52\x76\x58\x7f\x43\x4d\x53\x5d\x4a\xd3\x76\x9e\x23\x64\x52\x28\x1f\x94\x14\xaa\xc3\xf8\x50\x1d\x8c\xa5\xf4\x91\x0a\xdc\xbb\x68\x5a\x52\x52\x0a\xa5\x7d\xd9\xdf\x13\x97\x9e\x75\xf5\x8c\x9d\x92\x00\x00\x4a\x9b\xf8\xd0\xdf\x97\xb5\x6f\xab\xd4\xad\x9e\xd1\x3d\x9b\x7b\xe4\x6a\x1d\x15\xc3\xc0\xe8\x34\xc1\x07\xd3\xfc\x53\xc0\x87\xee\x9b\x86\x8f\x17\x50\xee\x5c\x6d\xfb\x86\x9a\xcf\xb3\xa6\x30\x29\x14\xc3\x90\x00\xe5\xc6\x1a\x0c\xd7\xd8\xd2\x38\x82\x5a\x6a\x0b\x70\xae\x4e\xbc\xe4\x9a\x71\x94\xb9\x94\x87\xde\xd5\xa0\x29\x5e\x1a\x4e\xed\x2c\x87\x10\xd9\x38\x0d\x83\x14\x77\x05\xa4\x95\x0a\xb8\x2b\xe0\x2e\xdd\xbc\x28\x2b\xb7\x68\x2d\x71\xf6\x6b\x2e\x05\x53\xec\xd9\xc1\x51\x7c\x79\x35\x51\x39\x6c\xe9\x13\xfb\x76\x3f\x0f\x2c\xf8\x44\x96\xcb\xf1\xe5\xd2\xad\x77\x07\xa3\xdf\xbb\x7a\xa1\x3d\x3a\x5a\xfe\xee\x8d\xcb\xa4\x10\xa7\x4a\x0b\x29\x84\x1a\x86\x72\x4f\x16\xa3\x79\xa4\xcf\x18\x1f\xbe\xf8\x4d\xd7\xcd\xb4\xe3\xa8\x26\x44\x3d\x9d\xd2\xf7\x3b\x77\x67\x39\x9c\xad\xda\x6f\x23\x46\x53\xcf\x8d\x13\x11\x6b\xff\x9a\xbe\x9f\x42\x6e\xf8\xd2\x50\xf6\xd7\xdf\xb3\xea\x41\x0a\xf1\x5a\xee\x2b\xad\xa0\x8e\x34\xe7\x0d\x1d\xb0\xb7\x31\x94\x5f\x83\x77\x6a\x5a\xe3\xcd\xe0\x0f\xce\x14\xa0\x3a\xf6\x4d\x5f\x47\xe3\xdd\x4f\xe7\x7c\x48\xf6\x93\x7b\xcc\xd4\xf6\xe6\xfa\xd3\xee\xea\xee\x72\xb7\x57\x3f\x1b\x1e\x0b\x70\xc6\xbe\x78\x52\x33\x61\xa4\xab\x39\xff\x59\x0e\xd9\x8b\x31\x4b\xb1\x00\x62\xf6\x9c\x27\x6f\x66\x57\x53\x28\x4e\xbc\x94\x42\x0a\x7d\x82\x4d\xed\x95\x64\xfb\x8a\x7f\x9e\x5f\x24\x08\x73\x98\xe0\xbf\x5c\xa4\x73\xa2\x3f\x7a\xef\x8c\x9d\x98\xa4\x18\xa5\x14\xb5\x35\xe4\x62\x48\xb4\xcb\xe7\xc2\xba\x9d\x4f\xd9\x72\x79\xbe\xca\x28\x97\x0e\xac\x13\x72\x7d\xd7\x55\xa9\x33\x76\x75\xc1\x7a\xbd\x71\xcd\x9f\x68\x62\x16\x88\x1f\x89\xe1\x8d\x0d\xd3\xfe\x73\xb3\xfc\xc3\x6b\x4d\x5c\xee\xdc\xc1\x67\xea\x36\x22\x47\x6a\x60\x18\x8e\xd0\xf4\x7a\xf0\x2f\x74\x18\x6a\xb4\x4b\x20\x9f\xb1\x2b\x6f\xa7\xc8\x64\x8a\x09\xed\xa6\x69\x58\x15\xb0\x10\xee\x97\x4a\x7e\x84\x6e\xdc\x53\xb6\x66\xf8\x88\xda\xb9\xd0\x51\x1d\xe7\x04\xe6\xf9\x94\x6d\x29\xaa\x0a\xbe\xdc\x5c\xde\x7c\x84\x07\x74\x8d\x25\x08\x46\x47\xe2\x16\x34\x63\x4d\x87\xde\xda\xa7\x55\xf7\xb4\x60\x7e\x32\x42\xad\x89\xd0\x52\x64\x53\x07\xc0\x7b\xdf\x47\x08\x69\x9d\xbe\x2b\x4f\x50\x81\x62\xdf\x01\xba\x06\x66\x45\x3d\x13\x44\xc6\xda\x38\x5d\x7d\x25\x4c\x56\xac\x4e\xa6\x7f\xca\xec\xc4\xab\x35\x11\x3f\x04\xed\xbd\xd7\xef\xd0\x99\x3a\x23\xe6\x7c\x7e\xf8\xd4\xbe\x38\x2e\xff\x9b\xf7\x31\x44\xc6\x2e\x23\xd7\x74\xde\xa4\x18\xec\x49\x9b\x10\x89\xff\x07\x9b\x78\xf3\xc4\xe9\x37\xf0\x5f\x00\x00\x00\xff\xff\x7d\xae\xa5\xfa\x12\x06\x00\x00")

func mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainTmpl,
		"main.tmpl",
	)
}

func mainTmpl() (*asset, error) {
	bytes, err := mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.tmpl", size: 1554, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _main_testTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xe3\x36\x10\x3d\x93\x5f\x31\x2b\xec\x41\x0a\x1c\xba\xed\xb1\xa8\x0f\xa9\xeb\xa6\x29\xb2\x4e\x60\x79\xb1\xe8\xc9\x60\xa8\x31\x4d\x44\x26\x85\x21\xe5\x6c\x62\xe8\xdf\x8b\xa1\xe5\x24\x8b\xdc\x8a\x1e\x6c\x88\x33\x8f\x8f\xef\x3d\x0e\x78\x3c\x5e\xc2\xf4\x02\x12\xee\xbb\x56\x27\x84\x14\x80\xd0\x37\x48\x60\x75\xc2\x27\xfd\x0c\x7b\xed\xfc\x26\x61\x4c\xca\x06\x90\xeb\x9d\x8b\x6f\x68\xfe\xde\x21\x70\x17\xd0\x27\x7a\xee\x82\xf3\x09\xb6\x81\x20\x76\xfa\xc9\x3b\x6f\x41\x9f\x99\xa4\x8e\xa0\xc1\xec\x5c\xdb\x40\x47\xc1\x60\x8c\xd0\x47\x86\xbc\x72\x98\x70\x40\xd2\x16\x61\x8b\x3a\xf5\x84\x11\x30\x19\x25\x2f\xa6\x70\x39\x0c\x52\x76\xda\x3c\x72\x97\x25\x49\xe9\xf6\x5d\xa0\x04\xa5\x14\x45\x88\x45\xfe\x9f\x46\x67\xbd\x6e\x79\x11\x9f\xa3\xd1\x6d\xfe\x64\x6a\xe7\x6d\x21\xa5\x28\x6c\x50\xfd\x03\x92\x0a\x64\xa7\x2f\xba\x2b\x3e\x96\xf8\x67\x02\x61\x6e\xb9\xb4\xeb\x1f\x94\x09\xfb\x29\x43\xa6\x2f\xda\xbf\xb8\x07\x4d\x53\xea\x7d\x72\x7b\xc6\x1c\x8f\xa4\xbd\x45\xf8\xec\x9a\xef\x13\xf8\xdc\x3d\x5a\xf8\x75\x06\xea\xc6\x9b\xb6\x6f\xb0\xb9\x3f\x49\x8e\xd9\x80\x38\x1e\x19\xa0\xae\x5a\xa7\xe3\x52\xef\x71\x18\xa0\x18\x6b\x23\xf0\x54\xcd\xbc\xe8\x9b\x61\x90\x95\x94\x07\x4d\x60\xb4\xd9\x61\x53\x23\x1d\x90\xe0\xe2\xac\x43\x5d\x8f\xd1\xca\x6d\xef\x0d\xac\x31\xa6\x2f\xda\xf9\x72\x0f\x17\xa3\x69\xf5\xa5\x82\xa3\x14\x6e\x0b\x21\xaa\x6b\x4c\xe8\x0f\x65\x71\x7d\xb5\x5e\x7c\xbb\xfa\x67\xb3\xfa\xba\xdc\xcc\xff\xba\xb9\xfd\x63\x73\xbf\xba\x9b\x2f\xea\x7a\xb3\x5e\xd4\xeb\xa2\x82\x4f\x33\x28\x0a\xde\x27\x5a\x17\x13\xfa\x3b\x5f\xe7\x60\x63\x59\x49\x29\x84\x09\x0d\xb2\xcb\xbd\x5a\xf5\xbe\xac\xa4\x10\x21\xaa\xc5\x77\x97\x4a\xee\x54\x52\x0c\x80\x6d\xc4\x4c\x70\xee\xfc\xc4\x65\x39\x8c\x4a\x3f\xd0\x32\x36\x3a\x1b\x33\xad\x7e\xc4\xd2\xec\xb4\x67\xcd\x27\xc4\x04\x7e\xe6\x93\x4f\xd7\xab\x96\x21\xb9\xed\x73\xc9\xf8\x09\x8c\x17\xad\xea\x9b\xeb\xaf\xf5\xea\x17\x86\xd9\x00\x7c\xca\x89\x55\x6c\x60\x06\xbf\x5d\x32\x98\xb5\xbb\xed\x8f\x59\x7e\x9a\x81\x77\x6d\x06\x8a\xf7\x0d\x35\x6f\x43\xc4\x6c\x6e\x90\x62\x28\xab\x57\xed\x9c\x72\x9d\x34\xa5\x31\xfc\x32\xbd\xa5\xbd\xce\x47\xf2\xea\x36\x58\x8b\xc4\x76\x5e\x74\xa7\x96\xf8\x54\x4a\x21\xc6\xd1\xe2\xe5\x3c\x10\x72\xe9\x7d\xed\xef\xfa\x6e\xb9\xf0\x9c\x21\x95\xe3\xae\x7b\x0a\x4d\x6f\x92\x0b\x7e\x6c\xcc\x83\xdf\x3a\x5b\x56\xd5\x84\x37\x73\x40\xa9\x41\xa2\xc9\x48\xa5\x6e\xfc\x36\xdc\xe2\x01\x5b\xae\x30\x28\xe7\x96\x2d\x4d\x00\x29\x2b\x32\x84\x3a\xe1\x59\x7e\x95\xc7\x83\x5b\xef\xb2\x78\xb3\xa0\x16\x44\x81\xb2\xd4\xe2\x4f\xed\x5a\x6c\xf8\x91\x98\xbf\xa7\x00\xe7\x3f\xa6\x52\x15\xaf\x9a\xea\x44\xce\xdb\xb2\x40\x66\x2a\xb2\x8c\x91\xf5\x64\x83\x43\x26\x4c\x3d\x79\x9e\x11\xf9\xc3\x3d\xc0\x0c\x4e\xea\xa5\x60\x89\xe7\x95\xfa\x3d\x84\x14\x13\xe9\xae\x44\xdf\xe4\x67\x27\xaa\x15\x5a\x9e\x2b\xfa\x4f\x8e\x5e\x09\xff\x5f\x37\xa2\x0d\xf6\xca\x37\xdf\xb4\x4b\xe5\x49\x3a\x4f\xd2\xbf\x01\x00\x00\xff\xff\xcc\x38\x4f\x3d\x77\x05\x00\x00")

func main_testTmplBytes() ([]byte, error) {
	return bindataRead(
		_main_testTmpl,
		"main_test.tmpl",
	)
}

func main_testTmpl() (*asset, error) {
	bytes, err := main_testTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main_test.tmpl", size: 1399, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _structsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x4d\x6f\xd3\x40\x10\x3d\x7b\x7f\xc5\x93\xd5\x43\x12\xa5\x76\xcf\x15\x45\x42\x20\x10\x07\x10\x6a\xb9\xa7\x1b\x7b\xe2\x2c\xb5\x77\x97\xf1\x98\x92\x2e\xfe\xef\x68\xed\x4d\xa2\x82\x5a\x9f\x46\x9e\x79\x1f\x3b\x6f\x42\xb8\x44\xb9\x82\x50\xe7\x5b\x2d\x04\x71\x60\xb2\x35\x31\xa8\x6e\x08\x8d\x16\x7a\xd4\x07\xec\x45\x3c\xaa\xd6\x90\x15\x54\xae\x26\xac\x4a\x5c\x8e\xa3\x52\x5e\x57\x0f\xba\x21\x84\x50\x7c\x9b\xcb\xaf\xba\xa3\xd8\x31\x9d\x77\x2c\x58\xa8\x2c\xe7\xc1\x8a\xe9\x28\x57\x59\xee\xb5\xec\xcb\x9d\x69\x29\x16\xb9\x52\x59\xde\x18\xd9\x0f\xdb\xa2\x72\x5d\x39\x6c\x89\xcb\x27\x6d\x9f\xcc\x56\x73\x79\x46\x85\xc0\xda\x36\x84\x0b\x53\xff\x5e\xe3\xc2\x3f\x34\xb8\xbe\x41\xf1\xd9\x56\xed\x50\x53\x9d\x84\xfb\xc9\x51\x16\x42\x1c\x28\xde\xb5\x46\xf7\xb3\x17\xe4\xe9\xdf\x33\x87\x13\x2f\xd9\x7a\x1c\xd5\x52\xa9\xdd\x60\x2b\x34\x24\x1f\x0c\xc7\xf6\x62\x89\x5e\xd8\xd8\x06\x41\x65\x9b\x35\xa2\xe3\x35\x36\x6b\x6c\xa2\x72\x72\x56\xbc\xd7\x6d\x4b\xbc\xb8\x5a\xaa\x8c\x49\x06\xb6\x38\x9a\x2f\x3e\x4d\x54\x56\x77\xf4\x91\x5d\x77\x3b\x03\xd2\x7c\x24\x5b\xaa\x51\xa9\xe3\xbb\x8a\x3b\xe2\x5f\xa6\xa2\x7e\x9c\x7e\x96\x2b\xe0\xe6\xa5\x0f\x5f\x48\xf6\xae\x7e\x65\xe0\x94\xcd\x89\x7e\x86\x44\xf6\x10\xcc\x0e\x2d\x59\x14\xb7\xf4\x73\xa0\x5e\xee\x84\x87\x4a\xf0\x07\x96\x70\x35\x8e\x48\xf7\xd0\x90\x25\x8e\xf7\xd0\xcf\x7d\x71\x78\x64\xed\xc1\x33\x0a\x9a\x9b\x3e\xc9\x94\x65\x0c\x3f\xd1\x7d\x3f\xf8\xb8\x70\xd3\x43\xf6\x34\x5f\xcd\xd6\xd5\x07\xc8\xc1\x13\x76\x8e\x41\xb6\xf6\xce\x58\x89\x98\x39\x87\x42\x4d\xcd\xff\x38\x92\x72\x38\xc7\xff\x8f\xe7\x94\xb6\x18\x69\x09\x89\x2c\xd2\x24\xfc\xfd\x8f\xde\xd9\xeb\xfc\xa4\x93\xdf\xa7\xc0\x27\xe0\x78\x2e\x55\x3a\x83\xe3\xdb\xdf\x3c\xdf\xda\xdb\xe3\x3e\x5f\x18\x3b\x66\x77\x9a\xfb\x1b\x00\x00\xff\xff\x36\xf3\x56\xd6\x53\x03\x00\x00")

func structsTmplBytes() ([]byte, error) {
	return bindataRead(
		_structsTmpl,
		"structs.tmpl",
	)
}

func structsTmpl() (*asset, error) {
	bytes, err := structsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "structs.tmpl", size: 851, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tchannel_clientTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\xdd\x6f\xdb\x36\x10\x7f\x96\xfe\x8a\xab\xd0\x05\x52\xea\xd2\xef\x06\xf2\x10\x24\x43\x1b\x60\x6d\x83\x36\x7b\x1a\x86\x82\xa1\xce\x32\x11\x99\x52\x49\xca\x4e\xaa\xe9\x7f\x1f\xf8\xa5\x8f\xd8\x4e\x3f\xd6\x65\x45\x57\xbd\x44\x26\x8f\x77\xbf\x3b\xde\xfd\xee\x94\xb6\x7d\x0e\xf3\x63\xd0\xb8\xae\x4b\xaa\x11\x74\x05\x12\x45\x8e\x12\x30\x2f\x10\x0a\xaa\x71\x4b\xef\x40\xb3\x15\x15\x02\x4b\x60\x25\x47\xa1\x81\x55\x39\xc2\xf1\x1c\x9e\x77\x5d\x1c\xcf\xe7\x70\x49\xd9\x0d\x2d\x10\xda\x96\xf8\xd7\xd7\x74\x8d\x5d\x07\x5c\x41\x81\x02\x25\xd5\x98\xbb\x53\x8d\xc2\xdc\x98\x59\xd3\x1b\x84\x4a\xc2\x8a\x8a\xbc\x44\xb8\x3a\x0b\x16\x68\x59\x2a\x68\x14\x17\x05\x5c\xad\x24\x5f\x6a\x12\xd7\x07\xd4\xc7\x31\x5f\xd7\x95\xd4\x90\xc6\x51\xc2\x2a\xa1\xf1\x56\x27\x71\x94\xa0\x94\x95\x54\xe6\x4d\x69\xc9\x2a\xb1\x31\xaf\x9a\xaf\x31\x89\xe3\x28\x29\xb8\x5e\x35\xd7\x84\x55\xeb\x79\x73\x8d\x72\xfe\x91\x8a\x8f\xfc\x9a\xca\xb9\x6c\x44\x10\x6a\x5b\x49\x45\x81\xf0\x94\xe7\xb7\x33\x78\x5a\xdf\x14\xb0\x38\x01\x72\x21\x58\xd9\xe4\x98\x7b\x14\xca\x06\x20\x6a\x5b\x23\x40\x4e\x4b\x4e\x95\xf7\x3b\xf1\x6b\x13\xb8\x89\x11\x45\x91\x77\x5d\x9c\xd9\xb0\x5d\x08\x8d\x72\x49\x19\x2a\x58\x56\x12\xf4\x0a\x41\xa1\xdc\x70\x86\x40\x45\x1e\x82\x7d\x6f\x4b\x41\x8e\x4b\x2e\x30\x07\x2e\xec\xfa\xc5\xf9\x6f\x24\x6e\xdb\xa7\x4e\xfc\xe2\xdc\x22\x3d\x0b\x3f\x0c\xc2\x7e\xd3\xe0\x30\xdb\x9a\xeb\x12\x47\x42\x7f\x41\x2d\xb9\xd0\x4b\x48\x7e\x51\x6e\x31\xf1\x07\x7d\x18\xd4\x86\x59\xb5\xef\x3c\x86\xae\x33\xf8\xed\xa5\xb5\xad\xd3\xd6\xdb\x77\xd7\x6e\x90\xf1\xe0\x1f\xe8\x15\xd5\x1e\xb7\xea\x9d\xc1\x70\xfb\x72\xec\x6e\x7f\x88\xc4\xfa\xae\xc6\x07\x8c\xf4\xda\xdb\xe1\xc2\xc8\x2b\xd4\xab\x2a\x37\x00\x23\x00\x80\xb6\xe5\x4b\xab\x3d\xc5\x0f\x40\xde\xe2\x87\x06\x95\xbe\x32\x7a\x93\x24\x0b\x8b\xaa\xae\x84\xc2\xb0\x6a\x8e\xfa\xb3\xcf\x81\xb8\xab\x4b\xfd\x92\x79\x98\xbe\x05\x9f\x6c\xe4\xcc\xfd\x9d\x8d\xb6\x25\x7e\x78\x89\x34\x47\xa9\x60\x4d\xeb\x3f\x94\x96\x5c\x14\x7f\xba\x3f\x41\x2e\x83\xb1\xc2\x83\x62\xe6\xb1\xb9\xdc\x9f\x0b\x4e\x61\xa9\x10\xf8\x12\x76\x9d\x7a\x74\xf4\xc7\x6d\x3b\x09\x61\xd7\xcd\xbe\xa5\x6f\x93\xbb\x79\x04\xe7\xcc\x43\x65\xa1\xbc\x5f\x7d\x68\x07\xb7\x3e\x75\x79\x3b\x6e\x45\xce\xa7\xef\x10\xfc\x37\xbc\xbb\x9e\xda\xdc\x8b\xa5\x0f\xd7\x1c\x5e\xe3\xd6\x71\x0a\x48\xd4\x8d\x14\x0a\x28\x08\xdc\x8e\x28\x7f\xe0\xb9\x40\x7f\x23\x3a\xeb\x3a\x12\x2f\x1b\xc1\x06\x3d\x69\x68\x4b\xc7\x81\xba\xc9\x0b\xb7\x92\x19\x8f\x46\x5c\xd7\x75\xd0\xc6\x21\xe4\xa6\xcf\xad\xb8\x0a\xe4\x14\x4c\xe5\x5c\xb1\x6a\x83\xf2\xae\x5f\x11\x86\x25\x8f\xe7\xc6\x17\xbf\x14\x78\xd3\x1b\x36\xd7\xb3\xe4\x05\x79\xd5\x28\xfd\x02\xf5\x3b\x1b\x9c\x34\x71\x76\x15\x99\x82\x1f\xa9\x48\xb2\x38\x52\x6c\xa2\xc8\x85\x80\x18\x2d\xcd\xb5\xff\x95\x8e\x8e\x64\x71\x1c\xf1\xfa\x6b\x6d\xf3\xda\x98\xb4\x2d\xf2\xa0\x86\x0b\xa1\x0f\x1d\x37\x07\x1d\x66\x72\x89\x28\x55\x9a\x91\xd3\x3c\x4f\x79\x0d\xcf\x20\x59\x24\xf0\x0c\x7c\x7f\x25\x17\xba\xa2\x29\x17\x3a\x35\x47\xb2\x2c\xb3\x2d\x74\x7e\x0c\x57\x6f\xce\xdf\x2c\x20\x2d\x9b\x0c\xd6\xf4\xee\xda\x44\x5d\x9b\xe8\x2b\x04\xaa\xa1\x46\x09\x6b\xcb\xd7\x50\xe2\x06\xcb\x30\x52\x44\xa6\x0d\x57\x8d\x76\xad\x6a\x8d\xe4\x15\x2f\x4b\xae\x90\x55\x22\x87\x63\xb7\x74\xde\x48\xaa\x79\x25\x52\x47\x1b\x5f\xec\x9b\x37\x91\x64\xb3\x38\xca\x7a\x8b\x97\x28\x4f\xb5\x99\x86\x1e\xc3\xf6\x60\xcc\xa3\x88\x23\x5f\x0a\x8b\x13\xe8\x53\xfb\x35\x6e\x43\xa5\x4c\xd3\x3f\x24\x8f\x29\xc2\xa3\x5e\x7c\x2a\xfb\xa6\x36\x38\xdb\x38\x8a\xa2\x77\x43\x52\x2d\x7c\x0d\x8f\xf2\xcc\x28\x89\xae\x1c\xae\xb0\x6d\x1e\x0f\x75\xbc\x3d\xc0\x5e\xc0\x8e\x27\x46\xb0\xf3\xce\xb8\x72\x87\xa3\x7b\x25\xe9\x2a\x32\xda\x53\x92\xda\xce\x7b\x93\x3a\x9c\x41\xce\x97\x4b\x94\x96\x20\x64\xb5\xfe\xbc\xb2\x8d\x9c\x26\xef\xf2\xc2\x8e\x63\x6a\xc3\x3c\xe9\x26\x06\xa4\x43\xd4\xbb\xea\x7e\xce\xe2\x28\xb0\xd6\x7d\x1e\xf1\x10\xf7\x91\x56\x5e\x6d\x85\xd2\x12\x69\x8f\xce\x8f\x2e\xf7\x75\x28\x2d\x1b\xa6\xcd\xb8\x32\xc1\x07\x8e\x5d\xfb\xdb\xf7\xcf\xf4\x4a\xdd\x7d\x1a\x70\x7b\x46\x9d\x40\x71\x5f\x33\xeb\x04\x73\xd6\x67\x1f\x21\x20\x84\xf4\x1b\x96\x7c\x53\xb6\x43\xad\xd9\x20\x9f\xc6\xa3\x94\xd9\xdf\xc8\xc6\x02\x0f\xb7\xb2\xb1\x64\x06\xe9\xa1\x06\x9b\x79\x6a\x0f\xcf\x86\x4a\x90\xa8\x9a\x52\x1b\x5c\x2f\x50\x9c\x55\x39\x5e\xde\x14\x0e\x21\x99\x64\xc0\xfb\x1e\xf9\xfb\xb7\xf6\x48\x3c\x51\x65\x5b\xe8\xe2\xc4\x64\xee\xe7\x2b\x3a\x95\x85\x6a\xfd\xd4\x69\x8b\xab\x61\x0c\x95\x9a\x19\x50\xb5\x77\xd7\x42\x37\x9a\x19\x71\x91\x24\x67\xb4\x2c\xd3\xe1\x90\x0f\xdf\x0c\x18\x99\xa4\xc8\xcc\xa4\x70\x9f\xbe\xa3\x00\xce\x2c\xd8\x19\x1c\x39\xd7\x67\x83\x2a\x53\x81\xe1\xdd\x4c\x53\x52\xc2\xc9\x09\x08\x5e\xc2\xd1\x11\x3c\xf1\xe8\x4c\x2e\x0e\x88\xb7\x5c\xb3\xd5\x64\xc9\x25\x96\xcf\xb7\x5f\x6f\x19\x5a\x3e\xf1\xdf\x3d\x53\xd4\x54\xa1\x8f\x3f\x19\xf2\xe8\x89\xb5\xb8\x30\xec\x31\x16\xb6\x60\x76\xa4\x77\xec\x86\x39\x62\xba\x9e\xe3\x92\x36\xa5\x3e\xa0\xd4\x7d\xfb\x19\xd6\x4c\x13\x89\x0c\xf9\x06\x73\x10\x55\x48\x8d\x4a\x42\x23\x6e\x44\xb5\x15\x80\xc1\x1d\x5b\xc4\x53\x86\xc8\x46\x36\x47\x77\xda\xed\x84\xd4\x39\x68\x62\x36\x86\xe2\x99\x4f\xf0\xd2\xde\xf8\x58\x81\x57\xec\x25\xee\xe7\x46\x3c\x08\x82\xaf\xe9\x07\x47\xfd\x20\xfe\xdd\x15\x6f\x06\xe9\x9e\xe1\xf2\xe0\xb4\xfc\x70\x31\x4f\xb5\xfc\xac\xd5\x9f\xb5\xfa\x2f\xd4\xe9\xfe\x62\x1d\x24\x55\xdd\x67\xc4\x97\xa4\xda\x4b\x2c\x6b\x94\xe4\x77\xb1\x95\xb4\x0e\x89\x9c\xfa\x14\xc8\xf6\xd0\xc1\x6e\x12\x7e\x92\x14\xee\x7f\x23\x07\xf9\x7f\xc6\x0a\x9f\xf8\x30\x1d\x22\xf3\xe0\x77\x69\x10\x3b\xf8\x59\x0a\x8f\xda\xe6\x7f\xac\x92\xff\x2f\xca\xfd\x07\x28\xf5\xaf\x6d\xc9\x51\x28\xbd\x87\x6a\xcc\xea\xfa\x0e\x0b\xec\xdb\xb5\xe3\xff\x79\xd1\xc1\xcf\x3e\xbb\xe7\xf5\xc7\xea\xb3\xae\xd2\xed\xff\x33\x87\x90\x87\xff\x70\xfe\x1d\x00\x00\xff\xff\xd3\x9b\x1b\xfe\x35\x1b\x00\x00")

func tchannel_clientTmplBytes() ([]byte, error) {
	return bindataRead(
		_tchannel_clientTmpl,
		"tchannel_client.tmpl",
	)
}

func tchannel_clientTmpl() (*asset, error) {
	bytes, err := tchannel_clientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tchannel_client.tmpl", size: 6965, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tchannel_handlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\x4f\x6f\xfb\x36\x0c\x3d\xc7\x9f\x82\x30\xd2\xc1\x29\x52\xf9\x5e\x20\x87\xa1\xc0\xd0\x1d\x56\x0c\x5b\x81\x1d\x86\x1d\x54\x8b\xb1\x85\x3a\xb2\x2b\xd1\x4d\x5a\x43\xdf\x7d\x90\xe5\x3f\x51\xd3\x7f\x19\xda\xa2\xd8\xcf\x87\x38\x90\xc9\x47\xf2\x91\x7c\x6a\xdb\x33\x48\x4f\x81\x70\x53\x97\x9c\x10\xa8\x02\x8d\x4a\xa0\x06\x14\x39\x42\xce\x09\xb7\xfc\x01\x28\x2b\xb8\x52\x58\x42\xc1\x95\x28\x51\x43\x56\x09\x84\xd3\x14\xce\xac\x8d\xa2\x34\x85\xdf\x79\x76\xcb\x73\x84\xb6\x65\xfd\xdf\x2b\xbe\x41\x6b\x41\x1a\xc8\x51\xa1\xe6\x84\xc2\x7b\x35\x06\x85\x8b\xb3\xe1\xb7\x08\x95\xee\x21\xe1\xfa\xa2\x0f\x91\xf1\xb2\x34\xd0\x18\xa9\x72\xb8\x2e\xb4\x5c\x13\x8b\xea\x17\xe0\xa3\x48\x6e\xea\x4a\x13\x24\xd1\x2c\xce\x2a\x45\xb8\xa3\x38\x9a\xc5\xa8\x75\xa5\x4d\x1c\x45\xb3\x38\x97\x54\x34\x37\x2c\xab\x36\x69\x73\x83\x3a\x7d\xe4\xea\x51\xde\x70\x9d\xea\x46\x91\xdc\xa0\x33\x6a\x5b\xcd\x55\x8e\x30\x97\x62\xb7\x84\x79\x7d\x9b\xc3\xf9\x0a\xd8\xaf\x2a\x2b\x1b\x81\xa2\x0f\x69\xba\x6a\x67\x6d\xeb\x0c\xd8\xcf\xa5\xe4\xa6\x2f\x32\xee\xcf\x82\xdc\x62\x67\x8a\x4a\x58\x1b\x2d\xa2\x68\x0c\x61\xee\xb3\x0e\xfc\x4f\xd4\xf7\x32\x43\x63\x6d\xd4\xb6\xf3\x81\xd7\xf3\x15\xd4\x5a\x2a\x5a\x43\x7c\x62\x2e\xfd\x61\xdc\x39\xb1\xbe\xe2\x34\x85\xc9\xde\x13\x4c\x05\x8e\x8d\x31\xa4\x9b\x8c\x60\x5d\xe9\x89\x51\xe3\x43\x39\xbf\x09\x88\x45\xf4\x50\x63\x88\xd5\x3b\xb7\x13\x23\xec\x37\xa4\xa2\x12\x7d\xe9\x00\xe0\x5a\xe0\x01\x7e\x69\x54\x16\x42\x06\x9f\xfa\xea\x3b\x47\x3b\xd5\x1f\x00\x7a\xbc\x33\x98\xaf\x1d\x56\x50\xfb\x89\x71\x20\x7b\xa5\x83\xff\x1d\xdc\x3c\x0d\xce\xcf\x5a\x60\x8c\x8d\x58\x72\x0d\x5c\x09\x48\xf0\x0e\xd8\x1f\x78\xd7\xa0\xa1\x6b\x57\x68\x1c\x2f\x86\x43\x53\x57\xca\xe0\x70\xda\x03\xba\x67\x60\xa4\x87\x75\xaf\x64\xfc\xe8\x9e\x7e\xc4\xd8\x85\x7f\x2f\x61\xc3\xeb\xbf\x0d\x69\xa9\xf2\x7f\xfc\x6b\x39\xda\x2f\x20\x39\xfc\x0a\xdd\x64\x2e\xc6\x6c\xb1\x34\xe8\x52\x3e\xcc\xf6\x13\xd3\x3a\x6d\xdb\x80\x05\x6b\x9f\xf3\x78\x3d\xd5\x80\xc3\x0f\xce\x15\x7c\x82\x23\x1b\xd6\x2e\x03\x88\x57\x99\x9d\x0d\xb9\x7e\x61\x52\x47\x73\xea\x93\xec\xb4\x61\xda\x92\x37\x76\xa4\x2b\xe2\xd8\x1d\xb9\xc2\xad\x13\x1a\xd4\x7f\x49\x2a\x9e\x5f\x56\xc8\x34\x72\x42\x03\xdc\x2b\x86\xb7\x87\xad\xa4\x02\x72\x79\x8f\x6a\xd4\x16\xc7\x1b\xc9\x4a\x81\xc6\x5c\x1a\x42\x8d\xc2\xef\x5d\xb7\xbe\xef\x08\x95\x70\x9d\xbb\x3e\x50\x47\xd0\x02\x06\x2d\x66\xfb\x81\xdb\x91\x56\x8d\xd4\x68\xe5\x80\x03\x38\x6f\x97\xfc\x14\x1c\xf6\x5a\xd9\x06\x6d\x0d\x04\xe9\x1c\xb8\xde\xdb\x03\xeb\x27\xfb\x7d\x0d\xe8\xd4\x66\xe0\xeb\xa3\xd4\xa6\x63\x2d\x29\xdc\x60\x4d\x1a\xbc\x98\x02\x3d\x19\x51\xda\x1d\x8e\xa9\xc6\xbb\x4b\xe4\x02\xb5\xf9\xaf\x4a\x04\x21\x63\x72\x0d\x05\x0b\x25\x7e\xb5\x02\x25\xcb\x27\x76\x7b\xed\x51\xb2\xec\xc1\x0c\xbb\xc2\x6d\x12\x87\xee\xd2\x80\xaa\x08\x04\xae\xa5\x42\x11\x2f\x02\x18\x1b\x3d\x03\xf8\x24\x81\x24\xa3\xdd\x7e\xa5\x13\x82\x3d\x4e\x46\xbf\x92\xef\xa3\xe4\xe0\x83\x7a\xf0\xfd\x1a\xf1\xd2\x25\xf1\xd9\x9d\x70\x9b\x6e\xde\x10\xec\xff\xd1\x46\xf8\x7a\xf7\xdb\xb1\x7f\x09\xce\xbe\x0b\xe3\x3f\xc2\x4e\xbc\xd4\x8a\xc3\xab\xde\x1f\xfd\x1b\x00\x00\xff\xff\xef\xa2\x0b\x08\x80\x0d\x00\x00")

func tchannel_handlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_tchannel_handlerTmpl,
		"tchannel_handler.tmpl",
	)
}

func tchannel_handlerTmpl() (*asset, error) {
	bytes, err := tchannel_handlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tchannel_handler.tmpl", size: 3456, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tchannel_serverTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xdf\x6f\xdb\x36\x10\x7e\x16\xff\x8a\x9b\x90\x14\x92\xa1\xd2\x7b\xce\x90\x87\x22\xeb\xd6\x3e\xac\x28\x9a\x60\x7d\x28\x8a\x82\xa6\x4e\x32\x11\x99\x72\x48\xca\x4e\xaa\xe9\x7f\x1f\xf8\x4b\x96\xec\x38\x28\xb6\x01\xf3\x43\x22\x53\xe4\xf7\xdd\x7d\xf7\xdd\x99\x7d\xff\x1a\x96\x0b\x30\xb8\xd9\x36\xcc\x20\x98\x16\x14\xca\x12\x15\x60\x59\x23\xd4\xcc\xe0\x9e\x3d\x81\xe1\x6b\x26\x25\x36\xa0\x51\xed\x50\x01\x6f\x4b\x84\xc5\x12\x5e\x0f\x03\x21\xcb\x25\x7c\x64\xfc\x9e\xd5\x08\x7d\x4f\xc3\xe3\x07\xb6\xc1\x61\x00\xa1\xa1\x46\x89\x8a\x19\x2c\xfd\xa9\x4e\x63\x69\x69\x36\xec\x1e\xa1\x55\xb0\x66\xb2\x6c\x10\xee\x6e\x02\x03\x67\x4d\xa3\xa1\xd3\x42\xd6\x70\xb7\x56\xa2\x32\x94\x6c\xcf\xc0\x13\x22\x36\xdb\x56\x19\xc8\x48\x92\xf2\x56\x1a\x7c\x34\x29\x49\x52\x54\xaa\x55\xda\x3e\x19\xb1\xc1\x94\x90\x24\xad\x85\x59\x77\x2b\xca\xdb\xcd\xb2\x5b\xa1\x5a\x7e\x67\xf2\xbb\x58\x31\xb5\x54\x9d\xf4\x9b\x92\xb4\x6e\xa9\x7d\x47\x5b\x55\x2f\x8d\xa3\x56\xfb\xe5\x5e\x28\x87\xd0\xf7\x8a\xc9\x1a\xe1\x42\x94\x8f\x05\x5c\x6c\xef\x6b\xb8\xba\x06\xfa\x5e\xf2\xa6\x2b\xb1\x0c\x71\x69\x27\x49\xd2\xf7\x76\x03\x7d\xd3\x08\xa6\x83\x12\x69\x58\x9b\x25\x90\xda\xad\x28\xcb\x61\x20\x39\x21\x7d\x7f\xc1\x1b\x81\xd2\xbc\xff\xd5\x61\xdf\xc4\x2f\x16\xb3\xef\x2f\x84\x34\xa8\x2a\xc6\xd1\xbe\x35\xc2\x34\x38\xd9\xf3\x17\x6c\x95\x90\xa6\x82\xd4\x49\x79\xa9\xd3\x78\xcc\x63\x5a\xc2\x97\xcf\x5d\x6a\xbf\x18\x0f\x86\x7c\xf5\x8e\xbb\x68\x6e\x51\xed\x04\x47\xed\x41\x83\x11\xae\xae\xdd\x06\xea\xd0\xa7\x50\xb7\xee\x7d\x3a\x0c\xd6\x1e\xe3\x7e\xef\x08\xb3\x9e\xd4\x7b\xc5\xf8\x3d\xca\x12\xaa\x56\xb9\x7d\x01\x6c\x18\x9c\xd7\x04\x47\x4a\xcc\xd3\x16\x67\x18\xda\xa8\x8e\x1b\xe8\x09\x00\x04\x03\xb9\xc3\xa3\x40\xc3\x40\xbc\x31\x3f\xe0\x7e\x7a\x70\xaf\xd8\x56\x03\x1b\xcf\x78\x52\x2f\xc9\xa8\xbd\x25\x68\x41\x18\xe0\x4c\xc2\x0a\x41\x61\x2d\xb4\x41\x85\x25\xec\x85\x59\x03\x03\x6f\x8e\xd0\x0c\x94\x54\x9d\xe4\x47\x4c\xd9\xf3\x51\xe5\x10\x7d\x47\x9d\x00\x5e\x25\xe8\x49\xa2\xd0\x74\x4a\xc2\xab\x09\x46\x4f\x92\x24\xc0\x14\x24\x89\x19\x85\x32\x80\x3f\xe0\xc5\x0c\x4a\x81\x64\x1b\x0c\xe1\x64\x1a\x16\x13\xac\x3c\x9e\xcb\x72\xab\x9e\x6d\xae\x03\x69\x3a\xd3\x3d\x0d\x44\x7f\xa0\x59\xb7\xa5\x9e\x11\x6d\xdc\x9a\xe3\xd1\x41\xc4\x12\x56\x4f\x60\xd6\x42\xcf\xe5\x38\xe1\x0f\x70\x59\x0e\x5f\xbe\x9e\x44\x10\x97\xfa\x43\x9f\xd1\xc8\xef\x1a\xca\x16\x3a\xed\xfb\x18\x62\x11\xfa\xc6\xbf\x8c\xd2\xbc\xf3\xa3\xa4\x14\x7a\xcb\x0c\x5f\xa3\xad\x74\x88\xd8\x4e\x15\x3b\x75\x78\xab\x14\xea\x6d\x2b\x4b\x1b\x40\x50\xf7\x5c\xc8\x1e\x2f\x73\x2e\xe3\xe6\x11\xc2\x84\xa1\x37\xfe\x7f\xe1\x5e\x78\x02\xe7\x7f\x9f\x83\x5f\x56\xf8\xf0\x0e\x59\x89\x4a\xc3\x86\x6d\xbf\xf8\x57\x5f\xa7\x3b\xec\x60\xf9\x93\x35\x1d\xc2\xc2\x3e\x52\xf7\x5c\x90\x1c\xb2\x55\xdb\x36\xc5\xc1\x29\x9f\x3e\xdf\xdd\x3a\xc3\x17\xcf\x40\x81\x9b\x75\xb9\xd5\x52\xef\x85\xe1\xeb\x69\x40\x2f\xca\xc9\x99\xc6\xa9\xa6\x57\x24\x49\x7c\xe4\xae\x24\x9a\x7a\x75\xc6\x0d\x19\x37\x8f\xc5\x24\xaf\xe2\x90\x41\x3e\x2b\x47\x89\x15\xeb\x1a\x63\xf1\x02\x56\xc5\x1a\x8d\x05\x48\xd1\x84\x3f\xd5\xc6\xd0\xb7\x36\xf0\x2a\x0b\xac\x69\x28\xd4\xe5\x0e\x64\x6b\xa0\x6a\x3b\x59\x82\x90\xa3\xb5\x2f\x77\x69\x31\x49\xad\x00\x4d\x47\x47\x17\x24\x49\xf2\x60\x83\xe3\x7c\xfd\xb4\xaa\x51\xde\xb4\x25\x7e\x0c\x43\xfb\xf7\xf1\xab\x93\xc9\x46\xfd\xbc\x03\x8e\x25\x78\xd9\x0a\xff\x43\xcd\x77\x4c\x59\x5a\x98\xe5\x38\x0c\x74\xd6\xd1\xdf\xc6\x04\xbe\xbd\x51\xb5\x8e\xa7\xf4\x0f\x9f\xfa\x84\xba\x6b\x0c\x21\x89\xa8\x2c\xb7\xd5\x50\xe1\x03\xfd\x4d\xb5\x9b\xcf\x42\x61\xb6\x38\x38\xe1\x17\xb7\xe1\xa7\x6b\x5b\x67\x1b\xe0\x59\x0b\xa0\x52\xb6\x64\x4e\x16\x7b\x0b\x11\x15\x30\x59\x42\x86\x0f\x40\x3f\xe1\x43\x87\xda\xdc\xd9\xb9\x9f\xa6\x79\x5c\xb4\x7d\xab\x31\xae\x46\x1f\xdb\x7e\x1e\x2d\x19\xa2\x8b\xe6\x55\xf4\xac\x7d\xf3\x91\x19\x1b\x8d\x96\xfe\x94\x79\xa4\x28\xfe\x29\x4b\x01\xaf\x14\x3e\x9c\xe3\x9a\x25\xf4\x2f\xf3\x89\x4c\x49\xa4\xf9\xef\x82\xf7\x90\xee\x96\x62\x9f\x7d\xf8\x59\x83\x12\xe8\xdb\x47\x8e\x5b\x23\x5a\xa9\x73\xf8\xf9\x30\x5b\x82\x4f\x46\x1b\xc0\xe4\xf3\xa2\x21\xec\x86\x83\x0e\xf4\xb6\xe3\x1c\xb5\x86\x6b\x50\x41\x42\x27\xe0\x59\x9e\x24\x92\x84\x59\xb8\xb3\x99\xa2\x52\x34\xb3\x77\x08\xd7\x31\x89\xc7\x09\x53\xe2\x10\xbf\x07\x1d\x01\xdc\x74\x5c\x9c\x36\x48\x90\xea\x6a\xb2\x35\x04\xb2\x83\xeb\x83\xeb\xe1\xe8\xf3\x42\xd2\xad\xd2\xf4\x03\xee\xb3\x67\x4e\xb9\xc1\xf8\x6e\x76\x57\x89\x97\x23\x0f\x88\x25\xc8\x56\xbe\xb6\xac\x0e\x09\xdc\x55\x69\x71\xd8\xb6\xea\x8c\x8b\x69\x67\x9b\xd3\xfe\x6c\x9e\x70\xe4\x47\x6b\xc3\xd1\x77\x5b\x86\x03\xde\x35\xec\x66\xc5\x9c\x8c\xfd\xf1\xd4\x64\xfe\xff\x68\xdd\xe7\x01\x8c\x4f\xe0\xcc\x26\xf1\xa4\x57\x2c\xa3\xef\xa5\x63\x6f\x9d\x7a\x26\x22\xc5\x40\xc7\xb0\x9d\x9d\x43\x54\xd6\x45\xbe\x7c\xce\xf4\xfa\xa8\x67\xa4\x68\x88\xfd\x21\x89\x18\x24\x02\xfc\x1d\x00\x00\xff\xff\x31\x87\x1a\x81\x40\x0d\x00\x00")

func tchannel_serverTmplBytes() ([]byte, error) {
	return bindataRead(
		_tchannel_serverTmpl,
		"tchannel_server.tmpl",
	)
}

func tchannel_serverTmpl() (*asset, error) {
	bytes, err := tchannel_serverTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tchannel_server.tmpl", size: 3392, mode: os.FileMode(420), modTime: time.Unix(1492805758, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"endpoint.tmpl":          endpointTmpl,
	"endpoint_register.tmpl": endpoint_registerTmpl,
	"endpoint_test.tmpl":     endpoint_testTmpl,
	"http_client.tmpl":       http_clientTmpl,
	"init_clients.tmpl":      init_clientsTmpl,
	"main.tmpl":              mainTmpl,
	"main_test.tmpl":         main_testTmpl,
	"structs.tmpl":           structsTmpl,
	"tchannel_client.tmpl":   tchannel_clientTmpl,
	"tchannel_handler.tmpl":  tchannel_handlerTmpl,
	"tchannel_server.tmpl":   tchannel_serverTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"endpoint.tmpl":          {endpointTmpl, map[string]*bintree{}},
	"endpoint_register.tmpl": {endpoint_registerTmpl, map[string]*bintree{}},
	"endpoint_test.tmpl":     {endpoint_testTmpl, map[string]*bintree{}},
	"http_client.tmpl":       {http_clientTmpl, map[string]*bintree{}},
	"init_clients.tmpl":      {init_clientsTmpl, map[string]*bintree{}},
	"main.tmpl":              {mainTmpl, map[string]*bintree{}},
	"main_test.tmpl":         {main_testTmpl, map[string]*bintree{}},
	"structs.tmpl":           {structsTmpl, map[string]*bintree{}},
	"tchannel_client.tmpl":   {tchannel_clientTmpl, map[string]*bintree{}},
	"tchannel_handler.tmpl":  {tchannel_handlerTmpl, map[string]*bintree{}},
	"tchannel_server.tmpl":   {tchannel_serverTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
